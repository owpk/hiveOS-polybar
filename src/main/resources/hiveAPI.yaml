---
swagger: 2.0
info:
  description: App API for Hive OS 2.0
  version: 2.1-beta
  title: Hive OS API
  contact:
    email: brain@hiveos.farm
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api2.hiveos.farm
basePath: /api/v2
tags:
- name: auth
- name: account
  description: Account methods
- name: farms
- name: workers
- name: fs
  description: Flight sheets
- name: wallets
- name: oc
  description: Overclocking profiles
- name: tags
- name: acl
- name: keys
  description: Attached API keys
- name: roms
  description: ROM files
- name: schedules
- name: benchmarks
- name: containers
- name: pools
  description: Pools, coins, templates
- name: common
- name: hive
schemes:
- https
consumes:
- application/json
produces:
- application/json
security:
- APIKeyHeader: []
- APIKeyQueryParam: []
paths:
  /auth/login:
    post:
      tags:
      - auth
      summary: Create auth token (sign in)
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/LoginRequest'
      responses:
        "200":
          description: Authentication token
          schema:
            $ref: '#/definitions/AuthToken'
        "403":
          description: Not allowed for authenticated users
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
      security: []
  /auth/logout:
    post:
      tags:
      - auth
      summary: Invalidate auth token (sign out)
      parameters: []
      responses:
        "204":
          description: Successful logout
  /auth/refresh:
    post:
      tags:
      - auth
      summary: Refresh auth token
      description: Just invalidate current token and create new one
      parameters: []
      responses:
        "200":
          description: Authentication token
          schema:
            $ref: '#/definitions/AuthToken'
  /auth/check:
    get:
      tags:
      - auth
      summary: Just check authentication status
      parameters: []
      responses:
        "204":
          description: Authenticated
        "401":
          description: Not authenticated
  /account:
    get:
      tags:
      - account
      summary: Get full account info
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Account'
    post:
      tags:
      - account
      summary: Create account (registration)
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/SignupRequest'
      responses:
        "201":
          description: Account created
          schema:
            allOf:
            - type: object
              properties:
                user_id:
                  type: integer
                  description: Created user ID
            - $ref: '#/definitions/AuthToken'
        "403":
          description: Not allowed for authenticated users
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
      security: []
    delete:
      tags:
      - account
      summary: Delete account
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            twofa_code:
              $ref: '#/definitions/TwofaCode'
      responses:
        "204":
          description: Account deleted
        "400":
          description: Code verification failed
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/profile:
    get:
      tags:
      - account
      summary: Get profile infirmation
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserProfile'
    patch:
      tags:
      - account
      summary: Update profile
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/UserProfileFields'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/password:
    put:
      tags:
      - account
      summary: Change password
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          required:
          - new_password
          - password
          properties:
            password:
              type: string
              format: password
              description: Current password
            new_password:
              $ref: '#/definitions/Password'
      responses:
        "204":
          description: Password has been updated
        "400":
          description: If current password is invalid
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/password/reset:
    post:
      tags:
      - account
      summary: Request password reset
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            email:
              type: string
              format: email
              description: Account email address
      responses:
        "202":
          description: Email with password reset token has been sent
        "403":
          description: Not allowed for authenticated users
      security: []
    put:
      tags:
      - account
      summary: Reset password
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            email:
              type: string
              format: email
              description: Account email address
            token:
              type: string
              description: Password reset token from email
            new_password:
              $ref: '#/definitions/Password'
      responses:
        "200":
          description: Password has been updated
          schema:
            $ref: '#/definitions/AuthToken'
        "403":
          description: Not allowed for authenticated users
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
      security: []
  /account/access:
    patch:
      tags:
      - account
      summary: Update account access settings
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/AccountAccess'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/twofa/secret:
    get:
      tags:
      - account
      summary: Generate secret code to enable Two Factor Authentication (2FA)
      parameters: []
      responses:
        "200":
          description: Secret code generated
          schema:
            type: object
            properties:
              secret:
                type: string
                description: Secret code
              qr_code_url:
                type: string
                format: url
                description: URL to QR-Code image for scanning the secret
  /account/twofa:
    post:
      tags:
      - account
      summary: Enable Two Factor Authentication (2FA)
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            secret:
              type: string
              description: Generated secret code
            twofa_code:
              $ref: '#/definitions/TwofaCode'
      responses:
        "204":
          description: 2FA enabled
        "400":
          description: Code verification failed
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - account
      summary: Disable Two Factor Authentication (2FA)
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            twofa_code:
              $ref: '#/definitions/TwofaCode'
      responses:
        "204":
          description: 2FA disabled
        "400":
          description: Code verification failed
        "404":
          description: 2FA is not enabled
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/notifications:
    get:
      tags:
      - account
      summary: Get notifications settings
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/NotificationChannels'
            - $ref: '#/definitions/NotificationSubscriptionsAccount'
    patch:
      tags:
      - account
      summary: Update notifications settings
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/NotificationSubscriptionsAccount'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/notifications/{channel}:
    post:
      tags:
      - account
      summary: Subscribe to Hive Bot notifications
      parameters:
      - name: channel
        in: path
        description: |
          Channel name.
          Available channels can be get from `/hive/notification_channels` endpoint
        required: true
        type: string
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            auth_code:
              type: string
              example: 12345
              description: Code given by bot
      responses:
        "204":
          description: Successfuly subscribed
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - account
      summary: Unsubscribe from Hive Bot notifications
      parameters:
      - name: channel
        in: path
        description: |
          Channel name.
          Available channels can be get from `/hive/notification_channels` endpoint
        required: true
        type: string
      responses:
        "204":
          description: Successfuly unsubscribed
  /account/events:
    get:
      tags:
      - account
      summary: Account events
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        type: integer
        default: 1
      - name: per_page
        in: query
        description: Per-page count (default is 15)
        required: false
        type: integer
      - name: type_id
        in: query
        description: Return only records of these types, comma-separated list of IDs
        required: false
        type: string
      - name: exclude_type_id
        in: query
        description: Exclude records of these types, comma-separated list of IDs
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AccountEvent'
              pagination:
                $ref: '#/definitions/Pagination'
  /account/transactions:
    get:
      tags:
      - account
      summary: Account transactions history
      parameters:
      - name: page
        in: query
        description: Page number
        required: false
        type: integer
        default: 1
      - name: per_page
        in: query
        description: Per-page count (default is 15)
        required: false
        type: integer
      - name: type_id
        in: query
        description: Return only records of these types, comma-separated list of IDs
        required: false
        type: string
      - name: exclude_type_id
        in: query
        description: Exclude records of these types, comma-separated list of IDs
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TransactionAccount'
  /account/payments:
    get:
      tags:
      - account
      summary: Account payments history
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Payment'
  /account/referral/balances:
    get:
      tags:
      - account
      summary: Get referral balances
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ReferralBalance'
  /account/referral/payout_addresses:
    get:
      tags:
      - account
      summary: Get payout addresses
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ReferralPayoutAddress'
    put:
      tags:
      - account
      summary: Update payout addresses
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/definitions/ReferralPayoutAddress'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/referral/payout_to_account:
    post:
      tags:
      - account
      summary: Make a payout to hive account
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/definitions/ReferralPayoutRequest'
      responses:
        "200":
          description: Payout succeeded
          schema:
            type: object
            properties:
              data:
                type: array
                description: Updated referral balances
                items:
                  $ref: '#/definitions/ReferralBalance'
              balance:
                type: number
                description: Updated user balance
        "400":
          description: Not enough funds
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/referral/promocode:
    put:
      tags:
      - account
      summary: Update promo code
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          required:
          - promocode
          properties:
            promocode:
              type: string
      responses:
        "204":
          description: Entity updated
        "403":
          description: Account is very young to use promocodes
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/deposit/coinpayments:
    get:
      tags:
      - account
      summary: Get request data for submitting to coinpayments system
      parameters:
      - name: amount
        in: query
        description: Deposit amount in fiat currency
        required: true
        type: number
        minimum: 0.01
      - name: farm_id
        in: query
        description: |
          Farm ID
          If set - after successful deposit in account the whole amount will be deposited in this farm
        required: false
        type: number
      - name: success_url
        in: query
        description: The URL to return after successful payment
        required: false
        type: string
      - name: cancel_url
        in: query
        description: The URL to return in after payment cancellation
        required: false
        type: string
      responses:
        "200":
          description: Returns URL and parameters for submitting with POST method
          schema:
            type: object
            properties:
              url:
                type: string
                description: URL where to submit the form
              data:
                type: object
                description: Form data
                properties: {}
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/deposit/address:
    get:
      tags:
      - account
      summary: Get list of generated payment addresses
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/DepositAddress'
    post:
      tags:
      - account
      summary: Generate payment address for deposits
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/DepositAddressCreateRequest'
      responses:
        "201":
          description: Address generated
          schema:
            $ref: '#/definitions/DepositAddress'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/tokens:
    get:
      tags:
      - account
      summary: Get list of auth tokens
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AuthTokenItem'
    post:
      tags:
      - account
      summary: Create new personal auth token
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/AuthTokenItemCreateUpdateRequest'
      responses:
        "201":
          description: Token created
          schema:
            $ref: '#/definitions/AuthTokenItemFull'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/tokens/{tokenId}:
    get:
      tags:
      - account
      summary: Get auth token info
      parameters:
      - name: tokenId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthTokenItemFull'
    delete:
      tags:
      - account
      summary: Delete auth token
      parameters:
      - name: tokenId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - account
      summary: Edit auth token
      parameters:
      - name: tokenId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/AuthTokenItemCreateUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/tokens/session:
    delete:
      tags:
      - account
      summary: Delete all session tokens except current.
      description: Personal tokens are not affected.
      parameters: []
      responses:
        "204":
          description: Entity deleted
  /account/send_money:
    post:
      tags:
      - account
      summary: Send money to another user
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            login:
              type: string
              description: Login or Email of user who will receive the money
            amount:
              type: number
              description: Amount in fiat currency
              minimum: 0.01
      responses:
        "204":
          description: OK
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /account/meta:
    get:
      tags:
      - account
      summary: Get all meta data from all namespaces
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            description: Meta data keyed by namespace
  /account/meta/{namespace}:
    get:
      tags:
      - account
      summary: Get meta data from namespace
      parameters:
      - name: namespace
        in: path
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            description: Meta data
    put:
      tags:
      - account
      summary: Replace the whole meta in namespace with provided data
      parameters:
      - name: namespace
        in: path
        required: true
        type: string
      - in: body
        name: body
        required: false
        schema:
          type: object
          description: Meta data
      responses:
        "204":
          description: OK
    delete:
      tags:
      - account
      summary: Delete the whole meta data namespace
      parameters:
      - name: namespace
        in: path
        required: true
        type: string
      responses:
        "204":
          description: OK
    patch:
      tags:
      - account
      summary: Merge existing meta in namespace with provided data
      parameters:
      - name: namespace
        in: path
        required: true
        type: string
      - in: body
        name: body
        required: false
        schema:
          type: object
          description: Meta data
      responses:
        "204":
          description: OK
  /account/announcements:
    get:
      tags:
      - account
      summary: List of unread announcements
      description: |
        Announcements are messages from Hive OS team with important information
        such as scheduled downtime or technical issues.
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                      description: Title
                    message:
                      type: string
                      description: Message text
                    type:
                      type: string
                      example: info
                      description: Severity type
                      enum:
                      - info
                      - success
                      - warning
                      - danger
                    url:
                      type: string
                      format: url
                      description: URL to details page
                    start_at:
                      type: integer
                      format: timestamp
                      description: When the associated event is scheduled to start
                    end_at:
                      type: integer
                      format: timestamp
                      description: When the associated event is scheduled to finish
                    is_hidden:
                      type: boolean
                      description: Announcements is hidden by user
  /account/announcements/{announcementId}/hide:
    post:
      tags:
      - account
      summary: Hide announcement (mark as read)
      parameters:
      - name: announcementId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Announcement has been hidden
  /farms:
    get:
      tags:
      - farms
      summary: List of accessed farms
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FarmListItem'
              tags:
                type: array
                description: Tags that are used by returned farms
                items:
                  $ref: '#/definitions/TagU'
    post:
      tags:
      - farms
      summary: Create new farm
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/FarmCreateRequest'
      responses:
        "201":
          description: Farm created
          schema:
            $ref: '#/definitions/Farm'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - farms
      summary: Delete multiple farms
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}:
    get:
      tags:
      - farms
      summary: Farm info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Farm'
    delete:
      tags:
      - farms
      summary: Delete farm
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - farms
      summary: Edit farm
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/FarmUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/events:
    get:
      tags:
      - farms
      summary: Farm events
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: page
        in: query
        description: Page number
        required: false
        type: integer
        default: 1
      - name: per_page
        in: query
        description: Per-page count (default is 15)
        required: false
        type: integer
      - name: type_id
        in: query
        description: Return only records of these types, comma-separated list of IDs
        required: false
        type: string
      - name: exclude_type_id
        in: query
        description: Exclude records of these types, comma-separated list of IDs
        required: false
        type: string
      - name: worker_id
        in: query
        description: Return only records for these workers, comma-separated list of IDs
        required: false
        type: string
      - name: config_type
        in: query
        description: Comma-separated list of hiveclient.conf types
        required: false
        type: string
        enum:
        - fs_conf
        - worker_conf
        - autofan_conf
        - coolbox_conf
        - octofan_conf
        - amd_conf
        - nvidia_conf
      - name: search
        in: query
        description: String with searched value
        required: false
        type: string
      - name: user
        in: query
        description: Filter by user. Both login and name are used for searching. This filter is searching by "contains", not "equals".
        required: false
        type: string
      - name: group
        in: query
        description: Output grouped events when possible
        required: false
        type: integer
        default: 0
        enum:
        - 0
        - 1
      - name: group_id
        in: query
        description: Output events cotained in this group
        required: false
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FarmEvent'
              pagination:
                $ref: '#/definitions/Pagination'
  /farms/{farmId}/transactions:
    get:
      tags:
      - farms
      summary: Transactions history
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: page
        in: query
        description: Page number
        required: false
        type: integer
        default: 1
      - name: per_page
        in: query
        description: Per-page count (default is 15)
        required: false
        type: integer
      - name: type_id
        in: query
        description: Return only records of these types, comma-separated list of IDs
        required: false
        type: string
      - name: exclude_type_id
        in: query
        description: Exclude records of these types, comma-separated list of IDs
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TransactionFarm'
  /farms/{farmId}/metrics:
    get:
      tags:
      - farms
      summary: Farm metrics
      description: |
        Provides metrics for current farm.
        Data is refreshed every 5 minutes.
        For 1 week period - metrics are downsampled by 15 minutes.
        For 1 month period - metrics are downsampled by 1 hour.
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: date
        in: query
        description: Start date
        required: false
        type: string
        default: today
        format: date, yyyy-mm-dd
      - name: period
        in: query
        description: Period (1 day, 1 week, 1 month)
        required: false
        type: string
        default: 1d
        enum:
        - 1d
        - 1w
        - 1m
      - name: fill_gaps
        in: query
        description: Fill gaps with empty points
        required: false
        type: integer
        default: 0
        enum:
        - 0
        - 1
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FarmMetric'
  /farms/{farmId}/stats:
    get:
      tags:
      - farms
      summary: Farm stats
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: worker_ids
        in: query
        description: Calculate stats only for these workers. Comma-separated IDs list.
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/FarmStatsField'
            - $ref: '#/definitions/FarmHashrates'
  /farms/{farmId}/deposit:
    post:
      tags:
      - farms
      summary: Make deposit to the farm from account balance
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Deposit'
      responses:
        "204":
          description: OK
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/invoice:
    get:
      tags:
      - farms
      summary: Generate invoice for specified period
      description: If period is not set - invoice for last month will be generated.
      produces:
      - application/pdf
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: start_date
        in: query
        description: Start date
        required: false
        type: string
        format: date, yyyy-mm-dd
      - name: end_date
        in: query
        description: End date
        required: false
        type: string
        format: date, yyyy-mm-dd
      responses:
        "200":
          description: Generated PDF file
          schema:
            type: file
  /farms/{farmId}/power_report:
    get:
      tags:
      - farms
      summary: Generate report about power consumption for specified period
      produces:
      - application/pdf
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: start_date
        in: query
        description: Start date
        required: true
        type: string
        format: date, yyyy-mm-dd
      - name: period
        in: query
        description: The period for which the report will be generated.
        required: true
        type: string
        enum:
        - 1d
        - 3d
        - 1w
        - 1m
      - name: action
        in: query
        description: The action with report after generation.
        required: true
        type: string
        enum:
        - download
        - send_to_email
      - name: worker_ids
        in: query
        description: Comma-separated list of worker ids for generating workers-specific report
        required: false
        type: string
      responses:
        "200":
          description: Generated PDF file|Report sent to email successful
          schema:
            type: file
  /farms/{farmId}/notifications:
    get:
      tags:
      - farms
      summary: Get notifications settings
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/NotificationChannels'
            - $ref: '#/definitions/NotificationSubscriptionsFarm'
    patch:
      tags:
      - farms
      summary: Update notifications settings
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/NotificationSubscriptionsFarm'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/transfers:
    get:
      tags:
      - farms
      summary: Get active transfers requests of all available farms
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  allOf:
                  - type: object
                    properties:
                      id:
                        type: integer
                        description: Transfer ID
                      farm:
                        type: object
                        description: Farm being transferred
                        allOf:
                        - $ref: '#/definitions/FarmShortInfo'
                  - $ref: '#/definitions/FarmTransfer'
  /farms/{farmId}/transfer:
    get:
      tags:
      - farms
      summary: Get active farm transfer request
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FarmTransfer'
        "404":
          description: If transfer was not yet requested
    post:
      tags:
      - farms
      summary: Create farm transfer request
      description: |
        This action sends a request to target user and the farm will be transferred when that user confirm the request.
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          required:
          - login
          properties:
            login:
              type: string
              description: Login or Email of user who will receive the request
            type:
              type: object
              allOf:
              - $ref: '#/definitions/FarmTransferType'
      responses:
        "201":
          description: Transfer request has been sent
          schema:
            $ref: '#/definitions/FarmTransfer'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - farms
      summary: Cancel farm transfer request
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/incoming:
    get:
      tags:
      - farms
      summary: Get incoming farm transfer requests
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    farm:
                      $ref: '#/definitions/FarmShortInfo'
                    user:
                      type: object
                      description: Who initiated the request
                      allOf:
                      - $ref: '#/definitions/UserShortInfo'
                    type:
                      $ref: '#/definitions/FarmTransferType'
                    created_at:
                      type: integer
                      format: timestamp
                      description: When the request was created
  /farms/incoming/confirm:
    post:
      tags:
      - farms
      summary: Confirm transfer request
      description: This action must be performed by user who received transfer request.
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          required:
          - farm_id
          properties:
            farm_id:
              type: integer
              description: Farm ID
      responses:
        "204":
          description: Request has been confirmed
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/incoming/reject:
    post:
      tags:
      - farms
      summary: Reject transfer request
      description: This action must be performed by user who received transfer request.
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          required:
          - farm_id
          properties:
            farm_id:
              type: integer
              description: Farm ID
      responses:
        "204":
          description: Request has been rejected
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/payer:
    delete:
      tags:
      - farms
      summary: Unassign farm payer and restore default value
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
  /farms/{farmId}/send_money:
    post:
      tags:
      - farms
      summary: Send money to user
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            login:
              type: string
              description: Login or Email of user who will receive the money
            amount:
              type: number
              description: Amount in fiat currency
              minimum: 0.01
      responses:
        "204":
          description: OK
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/deposit/address:
    get:
      tags:
      - farms
      summary: Get list of generated payment addresses
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/DepositAddress'
    post:
      tags:
      - farms
      summary: Generate payment address for deposits
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/DepositAddressCreateRequest'
      responses:
        "201":
          description: Address generated
          schema:
            $ref: '#/definitions/DepositAddress'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/workers:
    get:
      tags:
      - workers
      summary: Farm workers list
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: filter
        in: query
        description: Optional filter for workers
        required: false
        type: string
        enum:
        - problem
        - problem24
        - online
        - offline
      - name: tags
        in: query
        description: Filter by tags. Comma-separated list of Tag IDs.
        required: false
        type: string
      - name: platform
        in: query
        description: |
          Worker platform:
          * 1 - GPU
          * 2 - ASIC
        required: false
        type: integer
        enum:
        - 1
        - 2
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/WorkerListItem'
              tags:
                type: array
                description: Tags that are used by returned workers
                items:
                  $ref: '#/definitions/TagF'
    post:
      tags:
      - workers
      summary: Create new worker
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WorkerCreateRequest'
      responses:
        "201":
          description: Worker created
          schema:
            $ref: '#/definitions/Worker'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - workers
      summary: Delete multiple workers
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    patch:
      tags:
      - workers
      summary: Edit multiple workers at once
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: merge
        in: query
        description: |
          Merge some fields instead of replace them.
          These fields are:
          * miners_config
          * watchdog
          * autofan
          * octofan
          * coolbox
          * fanflap
          * powermeter
        required: false
        type: boolean
        enum:
        - 0
        - 1
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            worker_ids:
              type: array
              items:
                type: integer
            data:
              $ref: '#/definitions/WorkerMultiEditRequest'
      responses:
        "200":
          description: Workers updated
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  allOf:
                  - type: object
                    properties:
                      worker_id:
                        type: integer
                    required:
                    - worker_id
                  - $ref: '#/definitions/WorkerUpdatedResponse'
            description: Per-worker update response
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/workers/preview:
    get:
      tags:
      - workers
      summary: Preview all workers of the farm
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/WorkerShortInfo'
  /farms/{farmId}/workers/multi:
    post:
      tags:
      - workers
      summary: Create multiple workers
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/definitions/WorkerCreateRequest'
      responses:
        "201":
          description: Workers created
          schema:
            type: object
            properties:
              data:
                type: array
                description: Created workers in order they were provided in request
                items:
                  $ref: '#/definitions/Worker'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    patch:
      tags:
      - workers
      summary: Edit multiple workers
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: Worker ID to update
                  data:
                    $ref: '#/definitions/WorkerEditRequest'
      responses:
        "200":
          description: Workers updated
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  allOf:
                  - type: object
                    properties:
                      worker_id:
                        type: integer
                    required:
                    - worker_id
                  - $ref: '#/definitions/WorkerUpdatedResponse'
            description: Per-worker update response
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/workers/command:
    post:
      tags:
      - workers
      summary: Execute command on multiple workers
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            worker_ids:
              type: array
              items:
                type: integer
            data:
              $ref: '#/definitions/CommandRequest'
      responses:
        "200":
          description: Command sent
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Command ID
              commands:
                type: array
                description: Per-worker commands list
                items:
                  type: object
                  allOf:
                  - type: object
                    properties:
                      worker_id:
                        type: integer
                    required:
                    - worker_id
                  - $ref: '#/definitions/WorkerCommands'
  /farms/{farmId}/workers/command/amd_upload:
    post:
      tags:
      - workers
      summary: Extended version of "amd_upload" command
      description: Allows to flash different AMD GPUs of different workers in one request.
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              description: Grouped by ROM request data
              items:
                $ref: '#/definitions/RomUploadRequestItem'
      responses:
        "200":
          description: Command sent
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Command ID
              commands:
                type: array
                description: Per-worker commands list
                items:
                  type: object
                  allOf:
                  - type: object
                    properties:
                      worker_id:
                        type: integer
                    required:
                    - worker_id
                  - $ref: '#/definitions/WorkerCommands'
  /farms/{farmId}/workers/command/nvidia_upload:
    post:
      tags:
      - workers
      summary: Extended version of "nvidia_upload" command
      description: Allows to flash different Nvidia GPUs of different workers in one request.
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              description: Grouped by ROM request data
              items:
                $ref: '#/definitions/RomUploadRequestItem'
      responses:
        "200":
          description: Command sent
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Command ID
              commands:
                type: array
                description: Per-worker commands list
                items:
                  type: object
                  allOf:
                  - type: object
                    properties:
                      worker_id:
                        type: integer
                    required:
                    - worker_id
                  - $ref: '#/definitions/WorkerCommands'
  /farms/{farmId}/workers/overclock:
    post:
      tags:
      - workers
      summary: Extended overclocking
      description: |
        Allows to overlock individual GPUs of different workers in one request.
        Provided configurations will be merged into actual overclock of corresponding worker.
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            gpu_data:
              type: array
              description: Overclocking request data with GPU-related params.
              items:
                type: object
                properties:
                  gpus:
                    type: array
                    description: GPUs to overclock. Different workers can be mixed here.
                    items:
                      type: object
                      properties:
                        worker_id:
                          type: integer
                          description: Worker ID
                        gpu_index:
                          type: string
                          example: 0,1,2
                          description: Comma-separated list of GPU indexes (zero-based)
                  amd:
                    type: object
                    description: Overclock configuration for AMD GPUs
                    properties:
                      core_clock:
                        type: integer
                        description: Core Clock (Mhz)
                      core_state:
                        type: integer
                        description: Core State (Index)
                      core_vddc:
                        type: integer
                        description: Core Voltage (mV)
                      mem_clock:
                        type: integer
                        description: Memory Clock (Mhz)
                      mem_state:
                        type: integer
                        description: Mem State (Index)
                      mem_mvdd:
                        type: integer
                        description: Memory voltage (mV)
                      mem_vddci:
                        type: integer
                        description: Memory bus voltage (mV)
                      fan_speed:
                        type: integer
                        description: Fan (%)
                      power_limit:
                        type: integer
                        description: Power Limit (W) (0 for stock value)
                  nvidia:
                    type: object
                    description: Overclock configuration for Nvidia GPUs
                    properties:
                      core_clock:
                        type: integer
                        description: +Core Clock (Mhz)
                      mem_clock:
                        type: integer
                        description: +Memory (Mhz)
                      fan_speed:
                        type: integer
                        description: Fan (%) (0 for auto)
                      power_limit:
                        type: integer
                        description: Power Limit (W) (0 for stock value)
            common_data:
              type: array
              description: Overclocking request data with worker-global params.
              items:
                type: object
                properties:
                  worker_ids:
                    type: array
                    description: Worker IDs
                    items:
                      type: integer
                  amd:
                    type: object
                    description: Overclock configuration for AMD GPUs
                    properties:
                      aggressive:
                        type: boolean
                        description: Aggressive undervolting (set OC for each DPM state)
                  nvidia:
                    type: object
                    description: Overclock configuration for Nvidia GPUs
                    properties:
                      logo_off:
                        type: boolean
                        description: Turn Off LEDs (may not work on some cards)
                      ohgodapill:
                        type: boolean
                        description: Enable OhGodAnETHlargementPill
                      ohgodapill_start_timeout:
                        type: integer
                        description: Timeout to start OhGodAnETHlargementPill, seconds
                      ohgodapill_args:
                        type: string
                        example: --revA 0,1,2
                        description: Arguments for OhGodAnETHlargementPill
                      running_delay:
                        type: integer
                        description: Delay before applying overclock, seconds
      responses:
        "200":
          description: Command sent
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Command ID
              commands:
                type: array
                description: Per-worker commands list
                items:
                  type: object
                  allOf:
                  - type: object
                    properties:
                      worker_id:
                        type: integer
                    required:
                    - worker_id
                  - $ref: '#/definitions/WorkerCommands'
  /farms/{farmId}/workers/reload:
    post:
      tags:
      - workers
      summary: Reload multiple workers
      description: Send configuration to workers, including flight sheet and overclock
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WorkerIds'
      responses:
        "201":
          description: Command sent
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Command ID
              commands:
                type: array
                description: Per-worker commands list
                items:
                  type: object
                  allOf:
                  - type: object
                    properties:
                      worker_id:
                        type: integer
                    required:
                    - worker_id
                  - $ref: '#/definitions/WorkerCommands'
  /farms/{farmId}/workers/messages:
    get:
      tags:
      - workers
      summary: Farm workers messages list
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: page
        in: query
        description: Page number
        required: false
        type: integer
        default: 1
      - name: per_page
        in: query
        description: Per-page count (default is 15)
        required: false
        type: integer
      - name: worker_ids
        in: query
        description: Return only records for these workers, comma-separated list of IDs
        required: false
        type: string
      - name: message_ids
        in: query
        description: Return only these messages, comma-separated list of IDs
        required: false
        type: string
      - name: with_payload
        in: query
        description: Include message payload to ouput
        required: false
        type: integer
        default: 0
        enum:
        - 0
        - 1
      - name: start_time
        in: query
        description: Return only messages starting from given timestamp
        required: false
        type: integer
        format: timestamp
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  allOf:
                  - $ref: '#/definitions/WorkerMessage'
                  - type: object
                    properties:
                      worker:
                        $ref: '#/definitions/WorkerShortInfo'
    delete:
      tags:
      - workers
      summary: Delete all messages of all or provided workers
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            worker_ids:
              type: array
              description: Delete messages only of these workers.
              items:
                type: integer
            types:
              type: array
              description: Delete messages only of these types.
              items:
                $ref: '#/definitions/MessageType'
      responses:
        "204":
          description: Entity deleted
  /farms/{farmId}/workers/transfer:
    post:
      tags:
      - workers
      summary: Transfer multiple workers to another farm
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          allOf:
          - $ref: '#/definitions/WorkerIds'
          - $ref: '#/definitions/WorkerTransferRequest'
      responses:
        "204":
          description: Workers transferred
  /farms/{farmId}/workers/gpus:
    get:
      tags:
      - workers
      summary: Farm workers GPUs list
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: worker_ids
        in: query
        description: Return only records for these workers, comma-separated list of IDs
        required: false
        type: string
      - name: tags
        in: query
        description: Filter by tags. Comma-separated list of Tag IDs.
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Gpu'
  /farms/{farmId}/workers/filters:
    get:
      tags:
      - workers
      summary: Available values for filters that are used in worker and GPU lists
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              problems:
                type: array
                items:
                  type: string
                  example: overheat
              coins:
                type: array
                items:
                  type: string
                  example: ETH
              pools:
                type: array
                items:
                  type: string
                  example: hiveon
              miners:
                type: array
                items:
                  type: string
                  example: phoenixminer
              kinds:
                type: array
                items:
                  type: string
                  example: gpu
              wallets:
                type: array
                items:
                  type: integer
                  example: 12345
              tags:
                type: array
                items:
                  type: integer
                  example: 12345
              gpu_names:
                type: array
                items:
                  type: string
                  example: GeForce GTX 1070
              gpu_brands:
                type: array
                items:
                  type: string
                  example: nvidia
              gpu_mem_sizes:
                type: array
                items:
                  type: string
                  example: 8119 MiB
              gpu_mem_sizes_gb:
                type: array
                items:
                  type: integer
                  example: 8
              gpu_mem_types:
                type: array
                items:
                  type: string
                  example: SK Hynix H5GC4H24AJR
              gpu_mem_oems:
                type: array
                items:
                  type: string
                  example: Hynix
              gpu_oems:
                type: array
                items:
                  type: string
                  example: Asus
  /farms/{farmId}/workers/fix_auto_tags:
    post:
      tags:
      - workers
      summary: Synchronize auto-tags of all workers of the farm
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Tags updated
  /farms/{farmId}/workers/{workerId}:
    get:
      tags:
      - workers
      summary: Worker info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Worker'
    delete:
      tags:
      - workers
      summary: Delete worker
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - workers
      summary: Edit worker
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WorkerEditRequest'
      responses:
        "200":
          description: Worker updated
          schema:
            $ref: '#/definitions/WorkerUpdatedResponse'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/workers/{workerId}/password:
    put:
      tags:
      - workers
      summary: Update worker password
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WorkerEditPassword'
      responses:
        "204":
          description: Password updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/workers/{workerId}/command:
    post:
      tags:
      - workers
      summary: Execute command
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/CommandRequest'
      responses:
        "201":
          description: Command sent
          schema:
            allOf:
            - type: object
              properties:
                id:
                  type: integer
                  description: Command ID
            - $ref: '#/definitions/WorkerCommands'
  /farms/{farmId}/workers/{workerId}/reload:
    post:
      tags:
      - workers
      summary: Reload worker
      description: Send configuration to worker, including flight sheet and overclock
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      responses:
        "201":
          description: Command sent
          schema:
            allOf:
            - type: object
              properties:
                id:
                  type: integer
                  description: Command ID
            - $ref: '#/definitions/WorkerCommands'
  /farms/{farmId}/workers/{workerId}/metrics:
    get:
      tags:
      - workers
      summary: Worker metrics
      description: |
        Provides metrics for current worker.
        Data is refreshed every 5 minutes.
        For 1 week period - metrics are downsampled by 15 minutes.
        For 1 month period - metrics are downsampled by 1 hour.
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - name: date
        in: query
        description: Start date
        required: false
        type: string
        default: today
        format: date, yyyy-mm-dd
      - name: period
        in: query
        description: Period (1 day, 1 week, 1 month)
        required: false
        type: string
        default: 1d
        enum:
        - 1d
        - 1w
        - 1m
      - name: fill_gaps
        in: query
        description: Fill gaps with empty points
        required: false
        type: integer
        default: 0
        enum:
        - 0
        - 1
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/WorkerMetric'
  /farms/{farmId}/workers/{workerId}/messages:
    get:
      tags:
      - workers
      summary: Worker messages
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - name: message_ids
        in: query
        description: Return only these messages, comma-separated list of IDs
        required: false
        type: string
      - name: with_payload
        in: query
        description: Include message payload to ouput
        required: false
        type: integer
        default: 0
        enum:
        - 0
        - 1
      - name: start_time
        in: query
        description: Return only messages starting from given timestamp
        required: false
        type: integer
        format: timestamp
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/WorkerMessageFull'
    delete:
      tags:
      - workers
      summary: Delete all worker messages
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            types:
              type: array
              description: Delete messages only of these types.
              items:
                $ref: '#/definitions/MessageType'
      responses:
        "204":
          description: Entity deleted
  /farms/{farmId}/workers/{workerId}/messages/{messageId}:
    get:
      tags:
      - workers
      summary: Get worker message
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - name: messageId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkerMessageFull'
    delete:
      tags:
      - workers
      summary: Delete message
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - name: messageId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
  /farms/{farmId}/workers/{workerId}/transfer:
    post:
      tags:
      - workers
      summary: Transfer worker to another farm
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WorkerTransferRequest'
      responses:
        "204":
          description: Worker transferred
  /farms/{farmId}/workers/{workerId}/configs:
    get:
      tags:
      - workers
      summary: Get configuration files for worker
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkerConfigFiles'
  /farms/{farmId}/workers/{workerId}/fix_auto_tags:
    post:
      tags:
      - workers
      summary: Synchronize auto-tags of the worker
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: workerId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Tags updated
  /farms/{farmId}/fs:
    get:
      tags:
      - fs
      summary: Flight sheets list
      description: Returns flight sheets that belong to given farm along with flight sheets that belong to farm's owner
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FlightSheetF'
    post:
      tags:
      - fs
      summary: Create new flight sheet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/FSCreateRequest'
      responses:
        "201":
          description: Flight sheet created
          schema:
            $ref: '#/definitions/FlightSheetF'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - fs
      summary: Delete multiple flight sheets
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/fs/{fsId}:
    get:
      tags:
      - fs
      summary: Flight sheet info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: fsId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FlightSheetF'
    delete:
      tags:
      - fs
      summary: Delete flight sheet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: fsId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
        "409":
          description: Flight sheet is used by workers
    patch:
      tags:
      - fs
      summary: Edit flight sheet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: fsId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/FSUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /fs:
    get:
      tags:
      - fs
      summary: Flight sheets list
      description: Returns flight sheets that belong to current user
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FlightSheetU'
    post:
      tags:
      - fs
      summary: Create new flight sheet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/FSCreateRequest'
      responses:
        "201":
          description: Flight sheet created
          schema:
            $ref: '#/definitions/FlightSheetU'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - fs
      summary: Delete multiple flight sheets
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /fs/{fsId}:
    get:
      tags:
      - fs
      summary: Flight sheet info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: fsId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FlightSheetU'
    delete:
      tags:
      - fs
      summary: Delete flight sheet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: fsId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
        "409":
          description: Flight sheet is used by workers
    patch:
      tags:
      - fs
      summary: Edit flight sheet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: fsId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/FSUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/wallets:
    get:
      tags:
      - wallets
      summary: Wallets list
      description: Returns wallets that belong to given farm along with wallets that belong to farm's owner
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/WalletF'
    post:
      tags:
      - wallets
      summary: Create new wallet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WalletCreateRequest'
      responses:
        "201":
          description: Wallet created
          schema:
            $ref: '#/definitions/WalletF'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - wallets
      summary: Delete multiple wallets
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/wallets/{walletId}:
    get:
      tags:
      - wallets
      summary: Wallet info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: walletId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WalletF'
    delete:
      tags:
      - wallets
      summary: Delete wallet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: walletId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
        "409":
          description: Wallet is used by workers
    patch:
      tags:
      - wallets
      summary: Edit wallet
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: walletId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WalletUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /wallets:
    get:
      tags:
      - wallets
      summary: Wallets list
      description: Returns wallets that belong to current user
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/WalletU'
    post:
      tags:
      - wallets
      summary: Create new wallet
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WalletCreateRequest'
      responses:
        "201":
          description: Wallet created
          schema:
            $ref: '#/definitions/WalletU'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - wallets
      summary: Delete multiple wallets
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /wallets/{walletId}:
    get:
      tags:
      - wallets
      summary: Wallet info
      parameters:
      - name: walletId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WalletU'
    delete:
      tags:
      - wallets
      summary: Delete wallet
      parameters:
      - name: walletId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
        "409":
          description: Wallet is used by workers
    patch:
      tags:
      - wallets
      summary: Edit wallet
      parameters:
      - name: walletId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/WalletUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/oc:
    get:
      tags:
      - oc
      summary: Farm OC list
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/OCF'
    post:
      tags:
      - oc
      summary: Create new OC
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/OCCreateRequest'
      responses:
        "201":
          description: Overclock profile created
          schema:
            $ref: '#/definitions/OCF'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - oc
      summary: Delete multiple OC profiles
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/oc/{ocId}:
    get:
      tags:
      - oc
      summary: OC info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: ocId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OCF'
    delete:
      tags:
      - oc
      summary: Delete OC
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: ocId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - oc
      summary: Edit OC
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: ocId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/OCUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /oc:
    get:
      tags:
      - oc
      summary: OC list
      description: Returns overclocking profiles that belong to current user
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/OCU'
    post:
      tags:
      - oc
      summary: Create new OC
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/OCCreateRequest'
      responses:
        "201":
          description: Overclock profile created
          schema:
            $ref: '#/definitions/OCU'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - oc
      summary: Delete multiple OC profiles
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /oc/{ocId}:
    get:
      tags:
      - oc
      summary: OC info
      parameters:
      - name: ocId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OCU'
    delete:
      tags:
      - oc
      summary: Delete OC
      parameters:
      - name: ocId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - oc
      summary: Edit OC
      parameters:
      - name: ocId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/OCUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/tags:
    get:
      tags:
      - tags
      summary: Tags list
      description: Returns tags that belong to given farm along with tags that belong to farm’s owner
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TagF'
    post:
      tags:
      - tags
      summary: Create new tag
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/TagCreateRequest'
      responses:
        "201":
          description: Tag created
          schema:
            $ref: '#/definitions/TagF'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - tags
      summary: Delete multiple tags
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    patch:
      tags:
      - tags
      summary: Edit multiple tags
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  data:
                    $ref: '#/definitions/TagUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/tags/multi:
    post:
      tags:
      - tags
      summary: Create multiple tags
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/definitions/TagCreateRequest'
      responses:
        "201":
          description: Tags created
          schema:
            type: object
            properties:
              data:
                type: array
                description: Created tags in order they were provided in request
                items:
                  $ref: '#/definitions/TagF'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/tags/{tagId}:
    get:
      tags:
      - tags
      summary: Tag info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: tagId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TagF'
    delete:
      tags:
      - tags
      summary: Delete tag
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: tagId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - tags
      summary: Edit tag
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: tagId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/TagUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /tags:
    get:
      tags:
      - tags
      summary: Tags list
      description: Returns tags that belong to current user
      parameters:
      - name: type_id
        in: query
        description: Return only records of these types, comma-separated list of IDs
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TagU'
    post:
      tags:
      - tags
      summary: Create new tag
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/TagUCreateRequest'
      responses:
        "201":
          description: Tag created
          schema:
            $ref: '#/definitions/TagU'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - tags
      summary: Delete multiple tags
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    patch:
      tags:
      - tags
      summary: Edit multiple tags
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    description: Tag ID to update
                  data:
                    $ref: '#/definitions/TagUUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /tags/multi:
    post:
      tags:
      - tags
      summary: Create multiple tags
      parameters:
      - in: body
        name: body
        required: false
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/definitions/TagUCreateRequest'
      responses:
        "201":
          description: Tags created
          schema:
            type: object
            properties:
              data:
                type: array
                description: Created tags in order they were provided in request
                items:
                  $ref: '#/definitions/TagU'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /tags/{tagId}:
    get:
      tags:
      - tags
      summary: Tag info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: tagId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TagU'
    delete:
      tags:
      - tags
      summary: Delete tag
      parameters:
      - name: tagId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - tags
      summary: Edit tag
      parameters:
      - name: tagId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/TagUUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/acl:
    get:
      tags:
      - acl
      summary: Farm privileges
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FarmAcl'
    post:
      tags:
      - acl
      summary: Grant farm privileges
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          allOf:
          - type: object
            properties:
              login:
                type: string
                description: User login or email
          - $ref: '#/definitions/AclCreateRequest'
      responses:
        "201":
          description: ACL created
          schema:
            $ref: '#/definitions/FarmAcl'
    delete:
      tags:
      - acl
      summary: Revoke multiple privileges
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/acl/{aclId}:
    get:
      tags:
      - acl
      summary: Farm privileges for single user
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: aclId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FarmAcl'
    delete:
      tags:
      - acl
      summary: Revoke farm privileges
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: aclId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - acl
      summary: Edit farm privileges
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: aclId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/AclUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/acl/me:
    delete:
      tags:
      - acl
      summary: Remove my account from farm privileges
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
  /farms/{farmId}/keys:
    get:
      tags:
      - keys
      summary: Get list of attached API keys
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ApiKeyF'
    post:
      tags:
      - keys
      summary: Attach new API key
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ApiKeyCreateRequest'
      responses:
        "201":
          description: API key attached
          schema:
            $ref: '#/definitions/ApiKeyF'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - keys
      summary: Delete multiple API keys
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/keys/{keyId}:
    get:
      tags:
      - keys
      summary: Get attached API key info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: keyId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiKeyF'
    delete:
      tags:
      - keys
      summary: Detach API key
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: keyId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - keys
      summary: Edit attached API key
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: keyId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ApiKeyUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /keys:
    get:
      tags:
      - keys
      summary: Get list of attached API keys
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ApiKeyU'
    post:
      tags:
      - keys
      summary: Attach new API key
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ApiKeyCreateRequest'
      responses:
        "201":
          description: API key attached
          schema:
            $ref: '#/definitions/ApiKeyU'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - keys
      summary: Delete multiple API keys
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /keys/{keyId}:
    get:
      tags:
      - keys
      summary: Get attached API key info
      parameters:
      - name: keyId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiKeyU'
    delete:
      tags:
      - keys
      summary: Detach API key
      parameters:
      - name: keyId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - keys
      summary: Edit attached API key
      parameters:
      - name: keyId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ApiKeyUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/roms:
    get:
      tags:
      - roms
      summary: ROMs list
      description: Returns ROMs that belong to given farm along with ROMs that belong to farm's owner
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/RomListItemF'
    post:
      tags:
      - roms
      summary: Create new ROM
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/RomCreateUpdateRequest'
      responses:
        "201":
          description: ROM created
          schema:
            $ref: '#/definitions/RomListItemF'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - roms
      summary: Delete multiple ROMs
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/roms/{romId}:
    get:
      tags:
      - roms
      summary: Get ROM with contents
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: romId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RomF'
    delete:
      tags:
      - roms
      summary: Delete ROM
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: romId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - roms
      summary: Edit ROM
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: romId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/RomCreateUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /roms:
    get:
      tags:
      - roms
      summary: ROMs list
      description: Returns ROMs that belong to current user
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/RomListItemU'
    post:
      tags:
      - roms
      summary: Create new ROM
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/RomCreateUpdateRequest'
      responses:
        "201":
          description: ROM created
          schema:
            $ref: '#/definitions/RomListItemU'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - roms
      summary: Delete multiple ROMs
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /roms/{romId}:
    get:
      tags:
      - roms
      summary: Get ROM with contents
      parameters:
      - name: romId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RomU'
    delete:
      tags:
      - roms
      summary: Delete ROM
      parameters:
      - name: romId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - roms
      summary: Edit ROM
      parameters:
      - name: romId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/RomCreateUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/schedules:
    get:
      tags:
      - schedules
      summary: Schedules list
      description: Returns Schedules that belong to given farm
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: performed
        in: query
        description: Get only performed schedules
        required: false
        type: boolean
        enum:
        - 0
        - 1
      - name: planned
        in: query
        description: Get only planned schedules
        required: false
        type: boolean
        enum:
        - 0
        - 1
      - name: action
        in: query
        description: Get schedules with next actions. Supported multiple comma-separated actions
        required: false
        type: string
        enum:
        - command
        - flight_sheet
        - overclock
        - asic_overclock
      - name: command
        in: query
        description: Get schedules with next commands. Supported multiple comma-separated values
        required: false
        type: string
      - name: tag_ids
        in: query
        description: Return only records for these tags, comma-separated list of IDs
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ScheduleListItemF'
              tags:
                type: array
                description: Tags that are used by returned schedules
                items:
                  $ref: '#/definitions/TagF'
    post:
      tags:
      - schedules
      summary: Create new Schedule
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ScheduleCreateUpdateRequestF'
      responses:
        "201":
          description: Schedule created
          schema:
            $ref: '#/definitions/ScheduleF'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - schedules
      summary: Delete multiple Schedules
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/schedules/{scheduleId}:
    get:
      tags:
      - schedules
      summary: Get Schedule
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: scheduleId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScheduleF'
    delete:
      tags:
      - schedules
      summary: Delete Schedule
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: scheduleId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - schedules
      summary: Edit Schedule
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: scheduleId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ScheduleCreateUpdateRequestF'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /schedules:
    get:
      tags:
      - schedules
      summary: Schedules list
      description: Returns Schedules that belong to current user
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ScheduleListItemU'
              tags:
                type: array
                description: Tags that are used by returned schedules
                items:
                  $ref: '#/definitions/TagU'
    post:
      tags:
      - schedules
      summary: Create new Schedule
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ScheduleCreateUpdateRequestU'
      responses:
        "201":
          description: Schedule created
          schema:
            $ref: '#/definitions/ScheduleU'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - schedules
      summary: Delete multiple Schedules
      parameters:
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /schedules/{scheduleId}:
    get:
      tags:
      - schedules
      summary: Get Schedule
      parameters:
      - name: scheduleId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ScheduleU'
    delete:
      tags:
      - schedules
      summary: Delete Schedule
      parameters:
      - name: scheduleId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - schedules
      summary: Edit Schedule
      parameters:
      - name: scheduleId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ScheduleCreateUpdateRequestU'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/benchmarks/jobs:
    get:
      tags:
      - benchmarks
      summary: Get available bechmark jobs (algos) that can be run.
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: worker_id
        in: query
        description: Worker ID for individual run
        required: false
        type: integer
      - name: tags
        in: query
        description: Tags for batch run. Comma-separated list of Tag IDs.
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/BenchmarkJob'
  /farms/{farmId}/benchmarks:
    get:
      tags:
      - benchmarks
      summary: Get executed benchmarks
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: worker_id
        in: query
        description: Return only records for these workers, comma-separated list of IDs
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/BenchmarkWithResults'
    post:
      tags:
      - benchmarks
      summary: Start new benchmark
      description: |
        Benchmark can be started on single or multiple workers (only rigs).
        If `worker_id` is provided - benchmark is started only on this rig,
        otherwise benchmark is started on all farm's rigs, optionally filtered by `tag_ids`.
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/BenchmarkRequest'
      responses:
        "201":
          description: Benchmark started
          schema:
            $ref: '#/definitions/Benchmark'
    delete:
      tags:
      - benchmarks
      summary: Delete multiple benchmarks
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/benchmarks/{benchmarkId}:
    get:
      tags:
      - benchmarks
      summary: Benchmark info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: benchmarkId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BenchmarkWithResults'
    delete:
      tags:
      - benchmarks
      summary: Delete benchmark
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: benchmarkId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
  /farms/{farmId}/containers:
    get:
      tags:
      - containers
      summary: Farm containers list
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ContainerListItem'
    post:
      tags:
      - containers
      summary: Create new container
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ContainerCreateRequest'
      responses:
        "201":
          description: Container created
          schema:
            $ref: '#/definitions/Container'
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
    delete:
      tags:
      - containers
      summary: Delete multiple containers
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/IDs'
      responses:
        "204":
          description: Entity deleted
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /farms/{farmId}/containers/{containerId}:
    get:
      tags:
      - containers
      summary: Container info
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: containerId
        in: path
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Container'
    delete:
      tags:
      - containers
      summary: Delete container
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: containerId
        in: path
        required: true
        type: integer
      responses:
        "204":
          description: Entity deleted
    patch:
      tags:
      - containers
      summary: Edit container
      parameters:
      - name: farmId
        in: path
        required: true
        type: integer
      - name: containerId
        in: path
        required: true
        type: integer
      - in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/ContainerUpdateRequest'
      responses:
        "204":
          description: Entity updated
        "422":
          description: Validation errors
          schema:
            type: object
            properties:
              message:
                type: string
                example: The given data was invalid.
              errors:
                type: object
                example:
                  field1:
                  - The field1 is required
                  field2:
                  - The field2 must be a string
                  - The field2 must be 6 characters length
                description: Errors by field
                additionalProperties:
                  type: array
                  items:
                    type: string
  /pools:
    get:
      tags:
      - pools
      summary: Available pools list and coins that we have in pools
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              pools:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    coins:
                      type: array
                      items:
                        $ref: '#/definitions/CoinSymbol'
              coins:
                type: object
                example:
                  ETH:
                  - nanopool
                  - dwarfpool
                  ZEC:
                  - flypool
                description: Pools list by coin
                additionalProperties:
                  type: array
                  items:
                    type: string
      security: []
  /pools/by_name/{pool}:
    get:
      tags:
      - pools
      summary: Pool templates
      parameters:
      - name: pool
        in: path
        description: Pool name like "nanopool"
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/PoolTemplate'
      security: []
  /pools/by_coin/{coin}:
    get:
      tags:
      - pools
      summary: Pool templates which suit coin name
      parameters:
      - name: coin
        in: path
        description: Coin name like "ETH"
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/PoolTemplate'
      security: []
  /search:
    get:
      tags:
      - common
      summary: Search farms, workers, etc.
      parameters:
      - name: query
        in: query
        description: Search criteria
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              farms:
                type: array
                items:
                  $ref: '#/definitions/FarmShortInfo'
              workers:
                type: array
                items:
                  $ref: '#/definitions/WorkerShortInfo'
              fs:
                type: array
                items:
                  $ref: '#/definitions/FSShortInfo'
              oc:
                type: array
                items:
                  $ref: '#/definitions/OCShortInfo'
              wallets:
                type: array
                items:
                  $ref: '#/definitions/WalletShortInfo'
  /hive/versions:
    get:
      tags:
      - hive
      summary: Hive changelog
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/HiveVersion'
      security: []
  /hive/versions/{systemType}/{version}:
    get:
      tags:
      - hive
      summary: Hive version info
      parameters:
      - name: systemType
        in: path
        description: System type
        required: true
        type: string
        enum:
        - linux
        - asic
        - windows
      - name: version
        in: path
        description: Version number
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HiveVersion'
      security: []
  /hive/mirror_urls:
    get:
      tags:
      - hive
      summary: List of mirror URLs
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/MirrorUrl'
      security: []
  /hive/miners:
    get:
      tags:
      - hive
      summary: List of available miners
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      $ref: '#/definitions/MinerName'
                    name:
                      type: string
                      example: Claymore Dual
                      description: Miner name
                    platform:
                      type: object
                      properties:
                        amd:
                          type: boolean
                        nvidia:
                          type: boolean
                        cpu:
                          type: boolean
                        asic:
                          type: boolean
                    units:
                      type: string
                      example: KH/s
                    versions:
                      type: array
                      example:
                      - 11.7
                      - 11.6
                      description: Available versions
                      items:
                        type: string
                    algos:
                      type: array
                      description: Suppoted algorithms
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: cryptonight
                            description: Algo name
                          name:
                            type: string
                            example: XMR cryptonight
                            description: Display name
                    dalgos:
                      type: array
                      description: Suppoted secondary algorithms for dual miner
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: dcr
                            description: Algo name
                          name:
                            type: string
                            example: Decred
                            description: Display name
                    forks:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: avermore
                          name:
                            type: string
                            example: Avermore
                    default_fork:
                      type: string
                      description: This fork is used on worker if no fork is provided in hiveclient.conf
      security: []
  /hive/coins:
    get:
      tags:
      - hive
      summary: List of available coins
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Coin ID
                    coin:
                      $ref: '#/definitions/CoinSymbol'
                    name:
                      type: string
                      description: Coin display name
                    algos:
                      type: array
                      example:
                      - ethash
                      description: Algorithms for this coin
                      items:
                        $ref: '#/definitions/AlgoName'
      security: []
  /hive/algos:
    get:
      tags:
      - hive
      summary: List of available algorithms
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Algo ID
                    algo:
                      $ref: '#/definitions/AlgoName'
                    coins:
                      type: array
                      example:
                      - ETH
                      - ETC
                      description: Cois that uses this algorithm
                      items:
                        $ref: '#/definitions/CoinSymbol'
                    for_amd:
                      type: boolean
                      example: true
                      description: amd graphics card support
                    for_nvidia:
                      type: boolean
                      example: true
                      description: nvidia graphics card support
                    for_cpu:
                      type: boolean
                      example: true
                      description: support mining in cpu
                    for_asic:
                      type: boolean
                      example: true
                      description: support mining in asic
                    units:
                      type: string
                      example: H/s
                      description: unit of mining
                    power:
                      type: number
                      example: 1.4
                      description: coefficient for calculating required power
      security: []
  /hive/wallet_sources:
    get:
      tags:
      - hive
      summary: List of supported wallet sources
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              exchanges:
                type: array
                example:
                - binance
                description: List of supported exchanges for which we can fetch balance
                items:
                  type: string
              pools:
                type: array
                example:
                - ethermine
                description: List of supported pools for which we can fetch balance
                items:
                  type: string
              blockchains:
                type: array
                example:
                - BTC
                description: List of supported coins for which we can fetch balance from blockchain
                items:
                  type: string
      security: []
  /hive/pricing:
    get:
      tags:
      - hive
      summary: Get pricing information
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              free_workers:
                type: integer
                example: 3
                description: Amount of free workers per account
              price_details:
                type: array
                description: Price details
                items:
                  type: object
                  properties:
                    type:
                      $ref: '#/definitions/BillingType'
                    type_name:
                      type: string
                      description: Display name of billing type
                    price:
                      type: number
                      example: 3.0
                      description: Monthly price
      security: []
  /hive/overclocks:
    get:
      tags:
      - hive
      summary: Get popular overclock settings for different GPUs and algos. Result is sorted by rating.
      parameters:
      - name: gpu_brand
        in: query
        description: Filter by GPU brand
        required: false
        type: string
      - name: gpu_model
        in: query
        description: Filter by GPU model
        required: false
        type: string
      - name: gpu_mem
        in: query
        description: Filter by GPU memory
        required: false
        type: string
      - name: algo
        in: query
        description: Filter by algo
        required: false
        type: string
      - name: page
        in: query
        description: Page number
        required: false
        type: integer
        default: 1
      - name: per_page
        in: query
        description: Per-page count (default is 15)
        required: false
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    gpu_brand:
                      type: string
                      example: nvidia
                      description: GPU brand
                      enum:
                      - nvidia
                      - amd
                    gpu_model:
                      type: string
                      example: GeForce GTX 1070
                      description: GPU Model name
                    gpu_mem:
                      type: string
                      example: 8192M
                      description: GPU Memory
                    gpu_vbios:
                      type: string
                      example: MS-V34113-F4
                      description: VBIOS version for AMD GPUs
                    algo:
                      type: string
                      example: ethash
                      description: Algo name
                    cardinality:
                      type: integer
                      example: 335
                      description: Amount of GPUs that use such configuration
                    rating:
                      type: number
                      example: 0.88123
                      description: Configuration rating - percentage of the cadinality. Bigger is better.
                      minimum: 0
                      maximum: 1
                    config:
                      type: object
                      description: Overclock configuration
                      properties:
                        core_clock:
                          type: integer
                          description: Core clock
                        mem_clock:
                          type: integer
                          description: Memory clock
                        power_limit:
                          type: integer
                          description: Power limit for Nvidia GPUs
                        core_state:
                          type: integer
                          description: Core state for AMD GPUs
      security: []
  /hive/stats:
    get:
      tags:
      - hive
      summary: Get Hive statistics
      description: |
        Returns different proportional data.
        These statistics are updated once a day based on online workers for the moment.
        Items with amount < 0.01% is not included in the result, so they should be considered as "other".
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              algos:
                type: array
                description: |
                  Algorithms proportion.
                  For calculation we use amount of GPU that mine the algo.
                items:
                  $ref: '#/definitions/HiveStatItem'
              coins:
                type: array
                description: |
                  Coins proportion.
                  For calculation we use amount of GPU that mine the coin.
                items:
                  $ref: '#/definitions/HiveStatItem'
              miners:
                type: array
                description: |
                  Miners proportion.
                  For calculation we use amount of GPU that is used by the miner.
                items:
                  $ref: '#/definitions/HiveStatItem'
              pools:
                type: array
                description: |
                  Pools proportion.
                  For calculation we use amount of GPU that mine to the pool.
                items:
                  $ref: '#/definitions/HiveStatItem'
              gpu_brands:
                type: array
                description: GPU brands proportion
                items:
                  $ref: '#/definitions/HiveStatItem'
              amd_models:
                type: array
                description: AMD GPU models proportion
                items:
                  $ref: '#/definitions/HiveStatItem'
              nvidia_models:
                type: array
                description: Nvidia GPU models proportion
                items:
                  $ref: '#/definitions/HiveStatItem'
              asic_models:
                type: array
                description: ASIC models proportion
                items:
                  $ref: '#/definitions/HiveStatItem'
      security: []
  /hive/asic_firmwares:
    get:
      tags:
      - hive
      summary: Get ASIC firmwares list
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Firmware name
                    url:
                      type: string
                      description: File URL
      security: []
  /hive/notification_channels:
    get:
      tags:
      - hive
      summary: Get list of supported notification channels
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              channels:
                type: array
                items:
                  $ref: '#/definitions/NotificationChannelEnum'
              channels_data:
                type: object
                properties:
                  telegram:
                    type: object
                    properties:
                      bot_name:
                        type: string
                        example: hiveosbot
                  discord:
                    type: object
                    properties:
                      bot_name:
                        type: string
                        example: Hive Bot
                      invite_url:
                        type: string
                        format: url
                        example: https://discordapp.com/oauth2/authorize?client_id=...
                      command_prefix:
                        type: string
                        example: hive.
      security: []
  /hive/currencies:
    get:
      tags:
      - hive
      summary: Get list of currencies that are used in deposits and referral payments.
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/HiveCurrencyItem'
              fiat_currency:
                type: string
                example: USD
                description: System's fiat currency
      security: []
  /hive/deposit_address_providers:
    get:
      tags:
      - hive
      summary: Get list of deposit address providers with options.
      parameters: []
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: hive
                      description: |
                        Provider name:
                        * `hive` - Address is managed by Hive itself.
                        * `coinpayments` - Address is managed by CoinPayments system.
                      enum:
                      - hive
                      - coinpayments
                    currencies:
                      type: array
                      example:
                      - ETH
                      description: Supported currencies
                      items:
                        type: string
      security: []
securityDefinitions:
  APIKeyHeader:
    description: Bearer authorization
    type: apiKey
    name: Authorization
    in: header
  APIKeyQueryParam:
    description: Auth token
    type: apiKey
    name: token
    in: query
definitions:
  AuthToken:
    type: object
    properties:
      access_token:
        type: string
        description: Token to be used in further requests
      token_type:
        type: string
        example: bearer
        description: Token type. Only bearer type is supported
      expires_in:
        type: integer
        description: TTL in seconds
  UserProfileFields:
    type: object
    required:
    - email
    - name
    - timezone
    properties:
      name:
        type: string
      email:
        type: string
        format: email
      timezone:
        type: string
        format: timezone
        example: UTC
      phone:
        type: string
      telegram:
        type: string
      skype:
        type: string
      company_info:
        type: string
  UserProfile:
    allOf:
    - type: object
      properties:
        login:
          type: string
          minLength: 4
    - $ref: '#/definitions/UserProfileFields'
  Account:
    type: object
    properties:
      user_id:
        type: integer
      profile:
        $ref: '#/definitions/UserProfile'
      balance:
        type: number
        description: Balance
      min_deposit_amount:
        type: number
        description: Minimum deposit amount to get 30% bonus
      referral_reward:
        type: integer
        description: Reward in % from referrer payments
      referrers_count:
        type: integer
        description: Amount of users who were registered as current user's referral
      referrer_workers_count:
        type: integer
        description: Amount of workers that were created as current user's referral
      promocode:
        type: string
        description: Referral promocode
      can_set_promocode:
        type: boolean
        description: Only accounts older than 14 days can set promocode
      "2fa_enabled":
        type: boolean
        description: Indicates that Two Factor Authentication (2FA) is enabled for this account
      whitelist_ips:
        type: array
        items:
          type: string
          example: 1.1.1.1
      ip:
        type: string
        example: 1.1.1.1
        description: Current IP address
      recent_commands:
        type: array
        description: Recently executed custom commands (via exec). Maximum 10 unique commands are stored.
        items:
          type: string
      farms:
        type: array
        description: Farms list
        items:
          $ref: '#/definitions/FarmShortInfoAccount'
      meta:
        type: object
        description: Meta data keyed by namespace
        properties: {}
  UserShortInfo:
    type: object
    properties:
      id:
        type: integer
        example: 12345
        description: User ID
      login:
        type: string
        example: john.doe
        description: User login
      name:
        type: string
        example: John Doe
        description: User full name
      me:
        type: boolean
        example: false
        description: Is me
  FarmFields:
    type: object
    properties:
      name:
        type: string
        example: Test farm
        description: Display name
        maxLength: 100
      timezone:
        type: string
        format: timezone
        example: UTC
        description: Time zone for all farm workers. Default is account's time zone.
      gpu_red_temp:
        type: integer
        example: 72
        description: Red Temperature for GPU workers, °C
      asic_red_temp:
        type: integer
        example: 72
        description: Red Temperature for ASIC workers, °C
      asic_red_board_temp:
        type: number
        example: 72.0
        description: Red Board Temperature for ASIC workers, °C
      gpu_red_mem_temp:
        type: number
        example: 60.0
        description: Red memory temperature for GPU workers, °C
      gpu_red_cpu_temp:
        type: number
        example: 60.0
        description: Red CPU temperature for GPU workers, °C
      gpu_red_fan:
        type: integer
        example: 90
        description: Red Fan speed for GPU workers, %
      asic_red_fan:
        type: integer
        example: 90
        description: Red Fan speed for ASIC workers, %
      gpu_red_asr:
        type: integer
        example: 85
        description: Red Accepted Shares Ratio for GPU workers, %
      asic_red_asr:
        type: integer
        example: 85
        description: Red Accepted Shares Ratio for ASIC workers, %
      gpu_red_la:
        type: number
        example: 1.8
        description: Red Load Average per one CPU core for GPU workers
      asic_red_la:
        type: number
        example: 1.8
        description: Red Load Average per one CPU core for ASIC workers
      repo_urls:
        type: array
        description: Package repository URL list. Use this to override default list.
        items:
          type: string
          format: url
      power_price:
        type: number
        example: 0.1
        description: Electricity price per kilowatt hour
      power_price_currency:
        type: string
        example: $
        description: Currency of electricity price
      charge_on_pool:
        type: boolean
        description: Enable charging on brand pool
  Farm:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/FarmFields'
    - $ref: '#/definitions/FarmAutocreateHash'
    - $ref: '#/definitions/FarmNonfree'
    - $ref: '#/definitions/FarmProps'
    - $ref: '#/definitions/FarmRole'
    - $ref: '#/definitions/FarmWorkersCounts'
    - $ref: '#/definitions/FarmMoney'
    - $ref: '#/definitions/FarmStatsField'
    - $ref: '#/definitions/FarmHashrates'
    - $ref: '#/definitions/TagIds'
    - $ref: '#/definitions/PowerDrawSettings'
    - $ref: '#/definitions/FarmAutoTags'
    - $ref: '#/definitions/FarmDefaultFS'
  FarmListItem:
    $ref: '#/definitions/Farm'
  FarmCreateRequest:
    allOf:
    - $ref: '#/definitions/FarmFields'
    - $ref: '#/definitions/FarmNonfree'
    - $ref: '#/definitions/TagIds'
    - $ref: '#/definitions/PowerDrawSettings'
    - $ref: '#/definitions/FarmAutoTags'
    - $ref: '#/definitions/FarmDefaultFS'
  FarmUpdateRequest:
    allOf:
    - $ref: '#/definitions/FarmFields'
    - $ref: '#/definitions/FarmNonfree'
    - $ref: '#/definitions/TagIdsEdit'
    - $ref: '#/definitions/PowerDrawSettings'
    - $ref: '#/definitions/FarmAutoTags'
    - $ref: '#/definitions/FarmDefaultFS'
  FarmShortInfo:
    type: object
    properties:
      id:
        type: integer
        example: 12345
      name:
        type: string
        example: Test farm
  FarmRole:
    type: object
    properties:
      role:
        $ref: '#/definitions/AccessRoleEnum'
  FarmWorkersCounts:
    type: object
    properties:
      workers_count:
        type: integer
        example: 10
        description: Total amount of workers in farm
      rigs_count:
        type: integer
        example: 6
        description: Total amount of Rigs in farm
      asics_count:
        type: integer
        example: 4
        description: Total amount of ASICs in farm
      disabled_rigs_count:
        type: integer
        example: 1
        description: Amount of disabled Rigs in farm
      disabled_asics_count:
        type: integer
        example: 2
        description: Amount of disabled ASICs in farm
  FarmShortInfoAccount:
    allOf:
    - $ref: '#/definitions/FarmShortInfo'
    - $ref: '#/definitions/FarmWorkersCounts'
    - $ref: '#/definitions/FarmRole'
  FarmAutocreateHash:
    type: object
    properties:
      autocreate_hash:
        type: string
        example: 3bf6d003a4a10903bcb6a6f9310bc35c780808ad
        description: Unique ID to be used for connecting new workers to the farm
  FarmProps:
    type: object
    properties:
      locked:
        type: boolean
        example: false
        description: Farm is locked due to exceeding overdraft limit
      twofa_required:
        type: boolean
        description: 2FA is required for write operations (if not owner)
      owner:
        type: object
        description: Who owns the farm
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      payer:
        type: object
        description: Who pays for the farm. If not set - owner is the payer.
        allOf:
        - $ref: '#/definitions/UserShortInfo'
  FarmNonfree:
    type: object
    properties:
      nonfree:
        type: boolean
        example: true
        description: Paid features state
  FarmAutoTags:
    type: object
    properties:
      auto_tags:
        type: boolean
        example: true
        description: |
          Auto-tags feature.
          If enabled - all workers inside the farm are automatically tagged.
          Rigs are tagged by GPU information such as model name, memory size, OEM, etc.
          ASICs are tagged by model name.
  FarmDefaultFS:
    type: object
    properties:
      default_fs:
        type: object
        example:
          "1": 12233
          "2": 12244
        description: |
          Default flight sheets keyed by platform (1 - rig, 2 - asic).
          These flight sheets will be automatically attached to newly created workers.
        additionalProperties:
          type: integer
          description: Flight sheet ID
  FarmMoney:
    type: object
    properties:
      money:
        type: object
        properties:
          is_paid:
            type: boolean
            description: |
              Indicates that paid features are enabled for this farm.
              These features are enabled automatically when amount of online workers exceeds free limit.
              Also these features can be enabled manually at any time using farm's `nonfree` flag.
          is_free:
            type: boolean
            description: |
              Farm has zero cost.
              It means that either amount of online workers does not exceed free limit or all online workers are free.
          balance:
            type: number
            example: 123.45
            description: Balance
          discount:
            type: number
            example: 10.0
            description: Discount, %
          monthly_cost:
            type: number
            description: Monthly cost based on used amount of workers, including discount
          daily_cost:
            type: number
            description: Daily cost based on used amount of workers, including discount
          cost_details:
            type: array
            description: Cost details, discount is not included.
            items:
              $ref: '#/definitions/FarmMoneyCostItem'
          days_left:
            type: integer
            description: Amount of days left until balance has reached zero, based on current balance and daily price
          overdraft:
            type: boolean
            description: Balance is negative and farm is in overdraft state
          overdraft_days_left:
            type: integer
            description: Amount of days left until farm is locked when in overdraft state
  FarmMoneyCostItem:
    type: object
    properties:
      type:
        $ref: '#/definitions/BillingType'
      type_name:
        type: string
        description: Display name of billing type
      amount:
        type: number
        example: 1.23
        description: Amount of used workers of this billing type per day
      monthly_price:
        type: number
        example: 3.0
        description: Monthly price of this billing type
      monthly_cost:
        type: number
        example: 3.69
        description: Monthly cost of this amount of workers
      daily_cost:
        type: number
        example: 0.123
        description: Daily cost (monthly cost divided by days in month)
  FarmStatsField:
    type: object
    properties:
      stats:
        $ref: '#/definitions/FarmStats'
  FarmStats:
    type: object
    properties:
      workers_total:
        type: integer
        example: 10
        description: Total amount of workers
      workers_online:
        type: integer
        example: 8
        description: Amount of online workers
      workers_offline:
        type: integer
        example: 2
        description: Amount of offline workers
      workers_overheated:
        type: integer
        example: 1
        description: Amount of overheated workers (GPUs/boards exceeds red value)
      workers_overloaded:
        type: integer
        example: 1
        description: Amount of overloaded workers (15m CPU load average exceeds red value)
      workers_invalid:
        type: integer
        example: 1
        description: Amount of workers with invalid shares
      workers_low_asr:
        type: integer
        example: 1
        description: Amount of workers with low Accepted Shares Ratio (ASR is below red value)
      rigs_total:
        type: integer
        example: 5
        description: Total amount of Rigs
      rigs_online:
        type: integer
        example: 4
        description: Amount of online Rigs
      rigs_offline:
        type: integer
        example: 1
        description: Amount of offline Rigs
      gpus_total:
        type: integer
        example: 32
        description: Total amount of GPUs
      gpus_online:
        type: integer
        example: 24
        description: Amount of online GPUs
      gpus_offline:
        type: integer
        example: 8
        description: Amount of offline GPUs
      gpus_overheated:
        type: integer
        example: 3
        description: Amount of overheated GPUs
      asics_total:
        type: integer
        example: 5
        description: Total amount of ASICs
      asics_online:
        type: integer
        example: 4
        description: Amount of online ASICs
      asics_offline:
        type: integer
        example: 1
        description: Amount of offline ASICs
      boards_total:
        type: integer
        example: 15
        description: Total amount of ASIC boards
      boards_online:
        type: integer
        example: 12
        description: Amount of online ASIC boards
      boards_offline:
        type: integer
        example: 3
        description: Amount of offline ASIC boards
      boards_overheated:
        type: integer
        example: 0
        description: Amount of overheated ASIC boards
      cpus_online:
        type: integer
        example: 0
        description: Amount of online CPUs
      power_draw:
        type: number
        example: 4532.0
        description: Total power draw of all workers
      power_cost:
        type: number
        example: 0.45
        description: Consuming electricity cost per hour (in configured currency)
      asr:
        type: number
        example: 99.9
        description: |
          Accepted Shares Ratio, %
          Calculated as: `accepted_shares / total_shares * 100`
  FarmHashrates:
    type: object
    properties:
      hashrates:
        type: array
        items:
          type: object
          properties:
            algo:
              $ref: '#/definitions/AlgoName'
            hashrate:
              type: number
              example: 182859.0
              description: Hashrate value, kH/s
      hashrates_by_coin:
        type: array
        description: Summary hashrates per coin
        items:
          type: object
          properties:
            coin:
              $ref: '#/definitions/CoinSymbol'
            algo:
              $ref: '#/definitions/AlgoName'
            hashrate:
              type: number
              example: 182859.0
              description: Hashrate value, kH/s
    description: Summary hashrates per algorithm
  FarmMetric:
    type: object
    properties:
      time:
        type: integer
        format: timestamp
        example: 1526342689
      rigs:
        type: integer
        example: 10
        description: Rigs online
      gpus:
        type: integer
        example: 60
        description: GPUs online
      asics:
        type: integer
        example: 3
        description: ASICs online
      boards:
        type: integer
        example: 9
        description: ASIC boards online
      hashrates:
        type: array
        description: Hashrates by algorithm
        items:
          type: object
          properties:
            algo:
              $ref: '#/definitions/AlgoName'
            value:
              type: number
              example: 2.81491E9
              description: Hashrate
  WorkerFields:
    type: object
    properties:
      platform:
        $ref: '#/definitions/Platform'
      name:
        type: string
        example: Test worker
        description: Display name
        maxLength: 50
      description:
        type: string
        maxLength: 255
      units_count:
        type: integer
        example: 3
        minimum: 1
  WorkerPassword:
    type: object
    properties:
      password:
        type: string
        format: password, alpha-numeric
        minLength: 6
        maxLength: 64
  WorkerActive:
    type: object
    properties:
      active:
        type: boolean
        default: true
  Worker:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/FarmId'
    - $ref: '#/definitions/WorkerFields'
    - $ref: '#/definitions/WorkerActive'
    - $ref: '#/definitions/WorkerPassword'
    - $ref: '#/definitions/TagIds'
    - $ref: '#/definitions/WorkerMirrorUrl'
    - $ref: '#/definitions/WorkerRedValues'
    - $ref: '#/definitions/WorkerProps'
    - $ref: '#/definitions/WorkerVersions'
    - $ref: '#/definitions/WorkerFS'
    - $ref: '#/definitions/WorkerOverclock'
    - $ref: '#/definitions/WorkerOCId'
    - $ref: '#/definitions/WorkerOCConfig'
    - $ref: '#/definitions/WorkerOCAlgoActual'
    - $ref: '#/definitions/WorkerOCAlgoResolved'
    - $ref: '#/definitions/WorkerMinersConfig'
    - $ref: '#/definitions/WorkerTunedMiners'
    - $ref: '#/definitions/WorkerWatchdog'
    - $ref: '#/definitions/WorkerOptions'
    - $ref: '#/definitions/PowerDrawSettings'
    - $ref: '#/definitions/WorkerAutofan'
    - $ref: '#/definitions/WorkerStats'
    - $ref: '#/definitions/WorkerMinersSummary'
    - $ref: '#/definitions/WorkerMinersStats'
    - $ref: '#/definitions/WorkerGpuStatsSummary'
    - $ref: '#/definitions/WorkerGpuInfo'
    - $ref: '#/definitions/WorkerGpuStats'
    - $ref: '#/definitions/WorkerHardwareInfo'
    - $ref: '#/definitions/WorkerHardwareStats'
    - $ref: '#/definitions/WorkerAsicInfo'
    - $ref: '#/definitions/WorkerAsicStats'
    - $ref: '#/definitions/WorkerOctofan'
    - $ref: '#/definitions/WorkerOctofanStats'
    - $ref: '#/definitions/WorkerCoolbox'
    - $ref: '#/definitions/WorkerCoolboxInfo'
    - $ref: '#/definitions/WorkerCoolboxStats'
    - $ref: '#/definitions/WorkerFanflap'
    - $ref: '#/definitions/WorkerFanflapStats'
    - $ref: '#/definitions/WorkerPowermeter'
    - $ref: '#/definitions/WorkerPowermeterStats'
    - $ref: '#/definitions/WorkerMessages'
    - $ref: '#/definitions/WorkerCommands'
    - $ref: '#/definitions/WorkerBenchmark'
    - $ref: '#/definitions/WorkerAsicConfig'
  WorkerListItem:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/WorkerFields'
    - $ref: '#/definitions/WorkerActive'
    - $ref: '#/definitions/WorkerPassword'
    - $ref: '#/definitions/TagIds'
    - $ref: '#/definitions/WorkerMirrorUrl'
    - $ref: '#/definitions/WorkerRedValues'
    - $ref: '#/definitions/WorkerProps'
    - $ref: '#/definitions/WorkerVersions'
    - $ref: '#/definitions/WorkerStats'
    - $ref: '#/definitions/WorkerFS'
    - $ref: '#/definitions/WorkerOverclock'
    - $ref: '#/definitions/WorkerTunedMiners'
    - $ref: '#/definitions/WorkerMinersSummary'
    - $ref: '#/definitions/WorkerMinersStats'
    - $ref: '#/definitions/WorkerHardwareInfo'
    - $ref: '#/definitions/WorkerHardwareStats'
    - $ref: '#/definitions/WorkerGpuStatsSummary'
    - $ref: '#/definitions/WorkerGpuInfo'
    - $ref: '#/definitions/WorkerGpuStats'
    - $ref: '#/definitions/WorkerAsicInfo'
    - $ref: '#/definitions/WorkerAsicStats'
    - $ref: '#/definitions/WorkerMessages'
    - $ref: '#/definitions/WorkerWatchdog'
    - $ref: '#/definitions/WorkerOptions'
    - $ref: '#/definitions/PowerDrawSettings'
    - $ref: '#/definitions/WorkerAutofan'
    - $ref: '#/definitions/WorkerOctofan'
    - $ref: '#/definitions/WorkerOctofanStats'
    - $ref: '#/definitions/WorkerCoolbox'
    - $ref: '#/definitions/WorkerCoolboxInfo'
    - $ref: '#/definitions/WorkerCoolboxStats'
    - $ref: '#/definitions/WorkerFanflap'
    - $ref: '#/definitions/WorkerFanflapStats'
    - $ref: '#/definitions/WorkerPowermeter'
    - $ref: '#/definitions/WorkerPowermeterStats'
    - $ref: '#/definitions/WorkerCommands'
    - $ref: '#/definitions/WorkerBenchmark'
    - $ref: '#/definitions/WorkerAsicConfig'
  WorkerCreateRequest:
    allOf:
    - $ref: '#/definitions/WorkerFields'
    - $ref: '#/definitions/WorkerActive'
    - $ref: '#/definitions/WorkerPassword'
    - $ref: '#/definitions/TagIds'
    - $ref: '#/definitions/WorkerMirrorUrl'
    - $ref: '#/definitions/WorkerEditVpn'
    - $ref: '#/definitions/WorkerEditFS'
    - $ref: '#/definitions/WorkerEditOC'
    - $ref: '#/definitions/WorkerMinersConfig'
    - $ref: '#/definitions/WorkerWatchdog'
    - $ref: '#/definitions/WorkerOptions'
    - $ref: '#/definitions/PowerDrawSettings'
    - $ref: '#/definitions/WorkerAutofan'
    - $ref: '#/definitions/WorkerOctofan'
    - $ref: '#/definitions/WorkerCoolbox'
    - $ref: '#/definitions/WorkerFanflap'
    - $ref: '#/definitions/WorkerPowermeter'
    - $ref: '#/definitions/WorkerAsicConfig'
  WorkerEditRequest:
    allOf:
    - $ref: '#/definitions/WorkerFields'
    - $ref: '#/definitions/WorkerActive'
    - $ref: '#/definitions/TagIdsEdit'
    - $ref: '#/definitions/WorkerMirrorUrl'
    - $ref: '#/definitions/WorkerEditVpn'
    - $ref: '#/definitions/WorkerEditFS'
    - $ref: '#/definitions/WorkerEditOC'
    - $ref: '#/definitions/WorkerMinersConfig'
    - $ref: '#/definitions/WorkerWatchdog'
    - $ref: '#/definitions/WorkerOptions'
    - $ref: '#/definitions/PowerDrawSettings'
    - $ref: '#/definitions/WorkerAutofan'
    - $ref: '#/definitions/WorkerOctofan'
    - $ref: '#/definitions/WorkerCoolbox'
    - $ref: '#/definitions/WorkerFanflap'
    - $ref: '#/definitions/WorkerPowermeter'
    - $ref: '#/definitions/WorkerAsicConfig'
  WorkerMultiEditRequest:
    allOf:
    - $ref: '#/definitions/WorkerActive'
    - $ref: '#/definitions/WorkerEditFS'
    - $ref: '#/definitions/WorkerEditOC'
    - $ref: '#/definitions/TagIdsEdit'
    - $ref: '#/definitions/WorkerMirrorUrl'
    - $ref: '#/definitions/WorkerMinersConfig'
    - $ref: '#/definitions/WorkerWatchdog'
    - $ref: '#/definitions/WorkerOptions'
    - $ref: '#/definitions/PowerDrawSettings'
    - $ref: '#/definitions/WorkerAutofan'
    - $ref: '#/definitions/WorkerOctofan'
    - $ref: '#/definitions/WorkerCoolbox'
    - $ref: '#/definitions/WorkerFanflap'
    - $ref: '#/definitions/WorkerPowermeter'
    - $ref: '#/definitions/WorkerAsicConfig'
  WorkerUpdatedResponse:
    allOf:
    - $ref: '#/definitions/WorkerCommands'
    - {}
  WorkerShortInfo:
    allOf:
    - type: object
      properties:
        id:
          type: integer
          example: 12345
        farm_id:
          type: integer
          example: 55
        platform:
          $ref: '#/definitions/Platform'
        name:
          type: string
          example: Test worker
        description:
          type: string
          example: Worker description
    - $ref: '#/definitions/WorkerIpAddresses'
  WorkerMirrorUrl:
    type: object
    properties:
      mirror_url:
        $ref: '#/definitions/MirrorUrl'
  WorkerRedValues:
    type: object
    properties:
      red_temp:
        type: integer
        example: 72
        description: Red Temperature, °C
      red_mem_temp:
        type: number
        example: 60.0
        description: Red memory temperature (for rigs), °C
      red_cpu_temp:
        type: number
        example: 60.0
        description: Red CPU temperature (for rigs), °C
      red_board_temp:
        type: number
        example: 60.0
        description: Red Board Temperature (for ASICs), °C
      red_fan:
        type: integer
        example: 90
        description: Red Fan speed, %
      red_asr:
        type: integer
        example: 85
        description: Red Accepted Shares Ratio, %
      red_la:
        type: number
        example: 1.8
        description: Red Load Average per one CPU core
      red_hashrates:
        type: array
        description: Red hashrates per algo
        items:
          type: object
          properties:
            algo:
              $ref: '#/definitions/AlgoName'
            hashrate:
              type: number
              example: 182859.0
              description: Hashrate value, kH/s
  WorkerIpAddresses:
    type: object
    properties:
      ip_addresses:
        type: array
        example:
        - 192.168.0.105
        - 10.8.0.5
        description: List of assigned ip addresses
        items:
          type: string
          format: ip
  WorkerRemoteAddress:
    type: object
    properties:
      remote_address:
        type: object
        description: Remote address info
        properties:
          ip:
            type: string
            format: ip
            example: 1.2.3.4
            description: IP address
          hostname:
            type: string
            description: Resolved hostname
  WorkerProps:
    allOf:
    - $ref: '#/definitions/WorkerIpAddresses'
    - $ref: '#/definitions/WorkerRemoteAddress'
    - type: object
      properties:
        vpn:
          type: boolean
          example: true
          description: VPN is configured
        has_amd:
          type: boolean
          example: false
          description: Worker has AMD GPUs
        has_nvidia:
          type: boolean
          example: true
          description: Worker has Nvidia GPUs
        needs_upgrade:
          type: boolean
          example: true
          description: New OS version is available
        packages_hash:
          type: string
          example: 28453efa749841bf3cf84b17c79bbfd37897e1a0
          description: packages_hash
        lan_config:
          type: object
          description: LAN configuration
          properties:
            dhcp:
              type: boolean
              description: DHCP is enabled
            address:
              type: string
              example: 10.0.12.87/24
              description: IP address
            gateway:
              type: string
              example: 10.0.12.1
              description: Gateway address
            dns:
              type: string
              example: 10.0.11.1
              description: DNS server
        has_octofan:
          type: boolean
          example: true
          description: Worker has Octominer fan controller
        has_coolbox:
          type: boolean
          example: true
          description: Worker has Coolbox fan controller
        has_fanflap:
          type: boolean
          example: true
          description: Worker has FanFlap controller
        has_powermeter:
          type: boolean
          example: true
          description: Worker has Powermeter controller
  WorkerVersions:
    type: object
    properties:
      versions:
        type: object
        properties:
          hive:
            type: string
            example: 0.5-47
            description: Hive OS version
          system_type:
            type: string
            example: linux
            description: Hive OS system type
            enum:
            - linux
            - asic
            - windows
          kernel:
            type: string
            example: 4.13.16-hiveos
            description: Linux kernel version
          amd_driver:
            type: string
            example: 17.50-511655
            description: AMD driver version
          nvidia_driver:
            type: string
            example: 390.48
            description: Nvidia driver version
  WorkerOCConfig:
    type: object
    properties:
      oc_config:
        $ref: '#/definitions/OCConfig'
      oc_algo:
        $ref: '#/definitions/OCAlgo'
  WorkerOCId:
    type: object
    properties:
      oc_id:
        type: integer
        description: ID of recently applied Overclocking profile
  WorkerOverclock:
    type: object
    properties:
      overclock:
        type: object
        description: Actually applied overclock
        allOf:
        - type: object
          properties:
            algo:
              type: string
              example: ethash
              description: |
                Algorithm name of applied overclock. If omitted - default overclock is used.
        - $ref: '#/definitions/OCProps'
  WorkerOCAlgoActual:
    type: object
    properties:
      oc_algo_actual:
        type: string
        example: ethash
        description: |
          Actual algorithm name for which overclock is applied.
          It is either manually defined or automatically resolved.
  WorkerOCAlgoResolved:
    type: object
    properties:
      oc_algo_resolved:
        type: string
        example: ethash
        description: |
          Resolved overclock algorithm name based on applied flight sheet and tuning.
          This property just indicates which overclock should be applied. See "oc_algo_actual" for which is actually applied.
  WorkerEditPassword:
    allOf:
    - $ref: '#/definitions/WorkerPassword'
    - type: object
      properties:
        password_update_mode:
          type: integer
          description: |
            Change mode:
            1 - Change password in DB and try to change it on worker;
            2 - Change password in DB only. The worker with current password will offline
  WorkerEditVpn:
    type: object
    properties:
      vpn:
        type: object
        description: |
          VPN configuration

          Files will be named as following, so certificates in client.conf should
          be named ca.crt, client.crt, client.key.

          Also you can embed certificates in client.conf and upload just one file.
        properties:
          clientconf:
            type: string
            description: client.conf file contents
          cacrt:
            type: string
            description: ca.crt file contents
          clientcrt:
            type: string
            description: client.crt file contents
          clientkey:
            type: string
            description: client.key file contents
          login:
            type: string
          password:
            type: string
        required:
        - clientconf
  WorkerEditFS:
    type: object
    properties:
      fs_id:
        type: integer
        description: Flight sheet ID
  WorkerEditOC:
    allOf:
    - $ref: '#/definitions/WorkerEditOCId'
    - $ref: '#/definitions/WorkerOCConfig'
  WorkerEditOCId:
    type: object
    properties:
      oc_id:
        type: integer
        description: Overclocking profile ID
      oc_apply_mode:
        type: string
        description: |
          How to apply overclocking profile:
          - replace - means copy entire per-brand configurations of both default and per-algo sets;
          - merge - means copy only individual fields of per-brand configurations of both default and per-algo sets.
        enum:
        - replace
        - merge
        default: replace
  WorkerFS:
    type: object
    properties:
      flight_sheet:
        $ref: '#/definitions/FSMidInfo'
  WorkerStats:
    type: object
    properties:
      stats:
        type: object
        description: Worker stats
        properties:
          online:
            type: boolean
            description: Rig is online and reports stats
          boot_time:
            type: integer
            format: timestamp
            example: 1524140543
            description: When the rig was booted
          stats_time:
            type: integer
            format: timestamp
            example: 1577829600
            description: Timestamp when these stats were updated
          miner_start_time:
            type: integer
            format: timestamp
            example: 1525971728
            description: Timestamp when miner was started
          gpus_online:
            type: integer
            example: 3
            description: Amount of online GPUs
          gpus_offline:
            type: integer
            example: 0
            description: Amount of offline GPUs
          gpus_overheated:
            type: integer
            example: 0
            description: Amount of overheated GPUs
          cpus_offline:
            type: integer
            example: 0
            description: Amount of offline CPUs
          boards_online:
            type: integer
            example: 0
            description: Amount of online ASIC boards
          boards_offline:
            type: integer
            example: 0
            description: Amount of offline ASIC boards
          boards_overheated:
            type: integer
            example: 0
            description: Amount of overheated ASIC boards
          power_draw:
            type: number
            example: 304.0
            description: Worker power draw, watts
          overheated:
            type: boolean
            description: Has too hot GPUs/boards (exceeds red value)
          overloaded:
            type: boolean
            description: Has too high CPU load (exceeds red value)
          invalid:
            type: boolean
            description: Has invalid shares
          low_asr:
            type: boolean
            description: Has too low Accepted Shares Ratio (below red value)
  WorkerMinersSummary:
    type: object
    properties:
      miners_summary:
        type: object
        properties:
          hashrates:
            type: array
            description: Miners summary hashrates
            items:
              type: object
              properties:
                miner:
                  $ref: '#/definitions/MinerName'
                ver:
                  type: string
                  description: Actual miner version
                algo:
                  $ref: '#/definitions/AlgoName'
                coin:
                  $ref: '#/definitions/CoinSymbol'
                hash:
                  type: number
                  example: 92165.0
                  description: Hashrate summary, kH/s
                dalgo:
                  $ref: '#/definitions/DAlgoName'
                dcoin:
                  $ref: '#/definitions/DCoinSymbol'
                dhash:
                  type: number
                  example: 914928.0
                  description: Secondary hashrate summary for dual miners, kH/s
                shares:
                  type: object
                  description: Shares statistics
                  properties:
                    accepted:
                      type: integer
                      example: 100
                      description: Amount of accepted shares
                    rejected:
                      type: integer
                      example: 1
                      description: Amount of rejected shares
                    invalid:
                      type: integer
                      example: 1
                      description: Amount of invalid shares
                    ratio:
                      type: number
                      example: 98.04
                      description: Accepted shares ratio, %
  WorkerMinersStats:
    type: object
    properties:
      miners_stats:
        type: object
        properties:
          hashrates:
            type: array
            description: Miners stats
            items:
              type: object
              properties:
                miner:
                  $ref: '#/definitions/MinerName'
                algo:
                  $ref: '#/definitions/AlgoName'
                coin:
                  $ref: '#/definitions/CoinSymbol'
                hashes:
                  type: array
                  example:
                  - 30722
                  - 30709
                  - 30734
                  description: Hashrates, kH/s
                  items:
                    type: number
                dalgo:
                  $ref: '#/definitions/DAlgoName'
                dcoin:
                  $ref: '#/definitions/DCoinSymbol'
                dhashes:
                  type: array
                  example:
                  - 301345
                  - 308234
                  - 305349
                  description: Secondary hashrates for dual miners, kH/s
                  items:
                    type: number
                temps:
                  type: array
                  example:
                  - 70
                  - 72
                  - 69
                  description: Temperatures, °C
                  items:
                    type: integer
                fans:
                  type: array
                  example:
                  - 40
                  - 42
                  - 45
                  description: Fan speeds for GPU miners, %
                  items:
                    type: integer
                invalid_shares:
                  type: array
                  example:
                  - 0
                  - 1
                  - 0
                  description: Amounts of invalid shares
                  items:
                    type: integer
                bus_numbers:
                  type: array
                  example:
                  - 1
                  - 2
                  - 3
                  description: GPU bus numbers
                  items:
                    type: integer
  WorkerHardwareInfo:
    type: object
    properties:
      hardware_info:
        type: object
        description: Hardware information
        properties:
          motherboard:
            type: object
            properties:
              manufacturer:
                type: string
                example: ASUSTeK COMPUTER INC.
                description: Brand name
              model:
                type: string
                example: PRIME H270-PLUS
                description: Model name
              bios:
                type: string
                example: P1.60 03/23/2018
                description: BIOS info (version and date)
          cpu:
            type: object
            properties:
              id:
                type: string
                example: C3060300FFFBEBBF
                description: CPU ID
              model:
                type: string
                example: Intel(R) Celeron(R) CPU G3900 @ 2.80GHz
                description: Model name
              cores:
                type: integer
                example: 2
                description: CPU cores amount
              aes:
                type: boolean
                example: true
                description: AES supported
          disk:
            type: object
            properties:
              model:
                type: string
                example: ATA 16GB SATA Flash 16.0GB
                description: Model name
          net_interfaces:
            type: array
            items:
              type: object
              properties:
                iface:
                  type: string
                  example: eth0
                  description: Interface name
                mac:
                  type: string
                  example: 70:85:c2:4e:82:e4
                  description: MAC address
  WorkerHardwareStats:
    type: object
    properties:
      hardware_stats:
        type: object
        description: Hardware stats
        properties:
          df:
            type: string
            example: 2.7G
            description: Free disk space
          cpuavg:
            type: array
            example:
            - 2.01
            - 2.04
            - 2.03
            description: CPU load average (1 minute / 5 minutes / 15 minutes)
            items:
              type: number
          cputemp:
            type: array
            example:
            - 41
            - 43
            description: CPU temperature, °C
            items:
              type: number
          cpu_cores:
            type: integer
            example: 2
            description: CPU cores amount
          memory:
            type: object
            properties:
              total:
                type: integer
                description: Total RAM in megabytes
              free:
                type: integer
                description: Free RAM in megabytes
  WorkerAsicInfo:
    type: object
    properties:
      asic_info:
        type: object
        description: ASIC information
        properties:
          model:
            type: string
            example: Antminer S9
            description: Model name
          logic_version:
            type: string
            example: S9_V2.54
            description: Logic version
          firmware:
            type: string
            example: Fri Nov 17 17:37:49 CST 2017
            description: Firmware information
  WorkerAsicStats:
    type: object
    properties:
      asic_stats:
        type: object
        description: ASIC stats
        properties:
          fans:
            type: array
            description: Case fan speeds
            items:
              type: object
              properties:
                index:
                  type: integer
                  example: 2
                  description: Slot number where the fan is connected
                fan:
                  type: integer
                  example: 74
                  description: Fan speed in %
                fan_rpm:
                  type: integer
                  example: 4440
                  description: Fan speed in RPM
          fans_count:
            type: integer
            description: Amount of connected fans
          boards:
            type: array
            description: Boards stats
            items:
              type: object
              properties:
                chain:
                  type: integer
                  example: 5
                  description: Chain number
                acn:
                  type: integer
                  example: 63
                freq:
                  type: integer
                  example: 607.04
                  description: Frequency, MHz
                status:
                  type: array
                  example:
                  - 1
                  - 1
                  - 1
                  - 0
                  - 2
                  - 1
                  description: |
                    Status of every chip.
                    Possible values:
                    - 0 - Not working
                    - 1 - OK
                    - 2 - Hashrate problem
                  items:
                    type: integer
                temp:
                  type: integer
                  description: Chip temperature, °C
                board_temp:
                  type: integer
                  description: Board temperature, °C
                hw_errors:
                  type: integer
                  description: Hardware errors count
                power:
                  type: number
                  example: 472.5
                  description: Power draw, watts
                chain_voltage:
                  type: number
                  example: 472.5
                  description: Chain voltage, mV
          asicboost:
            type: boolean
            description: Indicates that asicboost technology is used. May be null if not supported.
  WorkerGpuInfo:
    type: object
    properties:
      gpu_info:
        type: array
        description: GPU information
        items:
          $ref: '#/definitions/GpuInfo'
  WorkerGpuStatsSummary:
    type: object
    properties:
      gpu_summary:
        type: object
        description: GPU summary stats
        properties:
          gpus:
            type: array
            description: Aggregated list of GPUs
            items:
              type: object
              properties:
                name:
                  type: string
                  example: Radeon RX 470
                  description: GPU name
                amount:
                  type: integer
                  example: 8
                  description: Amount of GPUs with this name
          max_temp:
            type: integer
            example: 77
            description: Maximum GPU temperature, °C
          max_fan:
            type: integer
            example: 98
            description: Maximum GPU fan speed, %
  WorkerGpuStats:
    type: object
    properties:
      gpu_stats:
        type: array
        description: GPU stats
        items:
          type: object
          allOf:
          - type: object
            properties:
              bus_number:
                type: integer
                example: 1
                description: GPU bus number
          - $ref: '#/definitions/GpuStats'
  WorkerMessages:
    type: object
    properties:
      messages:
        type: array
        description: Worker messages
        items:
          $ref: '#/definitions/WorkerMessage'
  WorkerCommands:
    type: object
    properties:
      commands:
        type: array
        description: Worker queue commands
        items:
          type: object
          properties:
            command:
              type: string
              description: Command name
            id:
              type: integer
              description: Command ID
            data:
              type: object
              description: Command data
              properties: {}
  WorkerBenchmark:
    type: object
    properties:
      benchmark_id:
        type: integer
        description: ID of currently running benchmark. This field is present until the benchmark is finished.
  WorkerMessage:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
        example: Config applied
      type:
        $ref: '#/definitions/MessageType'
      time:
        type: integer
        format: timestamp
        example: 1525899600
      cmd_id:
        type: integer
        description: Command ID for which this message is related to
      command:
        type: string
        example: amd_upload
        description: Command name for which this message is related to
      command_result:
        type: object
        description: Result of executed command
        properties: {}
      has_payload:
        type: boolean
        example: true
  WorkerMessageFull:
    allOf:
    - $ref: '#/definitions/WorkerMessage'
    - type: object
      properties:
        payload:
          type: string
          description: |
            Message payload (for example it can be command output).
            For type=file payload is base64-encoded file contents and title is file name.
  MessageType:
    type: string
    example: success
    enum:
    - success
    - info
    - file
    - warning
    - danger
  WorkerMinersConfig:
    type: object
    properties:
      miners_config:
        $ref: '#/definitions/MinersConfig'
  WorkerTunedMiners:
    type: object
    properties:
      tuned_miners:
        type: array
        description: List of miner names from active flight sheet that are tuned in this worker.
        items:
          $ref: '#/definitions/MinerName'
  WorkerWatchdog:
    type: object
    properties:
      watchdog:
        type: object
        description: Watchdog system
        properties:
          enabled:
            type: boolean
            description: Enable watchdog
          restart_timeout:
            type: integer
            description: Restart miner after minutes. Required if enabled
            minimum: 1
          reboot_timeout:
            type: integer
            description: Reboot worker after minutes. Required if enabled
            minimum: 1
          check_power:
            type: boolean
            description: Enable chacking power in watchdog.
          check_connection:
            type: boolean
            description: Enable checking internet connection in watchdog
          min_power:
            type: number
            description: Min power for start action. Setup action in power_action parameter.
          max_power:
            type: number
            description: Max power for start action. Setup action in power_action parameter.
          power_action:
            type: string
            description: Action for start if power value will be lower or upper appopriate paramter.
            enum:
            - reboot
            - shutdown
          check_gpu:
            type: boolean
            description: Reboot worker if GPU get offline
          max_la:
            type: number
            example: 25.0
            description: Reboot worker if Load Average is higher than this value
            minimum: 0
          options:
            type: array
            description: Per miner options
            items:
              type: object
              properties:
                miner:
                  $ref: '#/definitions/MinerName'
                minhash:
                  type: number
                  description: Minimal hashrate value
                units:
                  type: string
                  description: Units for Minimal hashrate value. Omit this parameter to use raw minhash value
                  enum:
                  - k
                  - M
                  - G
                  - T
                  - P
              required:
              - miner
              - minhash
        required:
        - enabled
        - reboot_timeout
        - restart_timeout
  WorkerOptions:
    type: object
    properties:
      options:
        type: object
        description: |
          Worker options.
          This object will be merged with existing one on update.
        properties:
          disable_gui:
            type: boolean
            example: false
            description: Disable GUI on boot (don't start X server, console only, no OC for Nvidia)
          maintenance_mode:
            type: integer
            example: 1
            description: |
              Enable maintenance mode
              * 0 - Maintenance mode is disabled
              * 1 - Don't start miner and watchdog
              * 2 - The same as 1 and don't load drivers
          push_interval:
            type: integer
            description: |
              Interval in seconds between pushing stats to server. Default is 10 seconds.
              Note that configs and commands will be pulled by worker with the same interval.
            minimum: 10
            maximum: 50
          miner_delay:
            type: integer
            example: 120
            description: Delay in seconds before miner start on worker boot.
            minimum: 0
          doh:
            type: integer
            example: 1
            description: |
              Enable DoH (DNS over HTTPS). If no value is set Hive will not touch any related services.
              * 0 - DoH is disabled
              * 1 - DoH is enabled only for Hive services
              * 2 - DoH is enabled globaly for the whole system
  WorkerAutofan:
    type: object
    properties:
      autofan:
        type: object
        description: Autofan configuration
        properties:
          enabled:
            type: boolean
            description: Enable autofan
          target_temp:
            type: integer
            description: |
              Target temperature, °C.
              Worker will try to keep this temperature by adjusting fan speeds in specified range.
          target_mem_temp:
            type: integer
            description: Target memory temperature for supported GPUs, °C.
          min_fan:
            type: integer
            description: Minimum fan speed, %
            minimum: 0
            maximum: 100
          max_fan:
            type: integer
            description: Maximum fan speed, %
            minimum: 0
            maximum: 100
          critical_temp:
            type: integer
            description: |
              Critical temperature, °C.
              Miners are suspended if worker reached this temperature.
          critical_temp_action:
            type: string
            description: Action to perform when critical temperature is reached
            enum:
            - reboot
            - shutdown
          no_amd:
            type: boolean
            description: Don't apply to AMD GPUs
          reboot_on_errors:
            type: boolean
            description: Reboot worker in case of autofan errors
          smart_mode:
            type: boolean
            description: Enable Smart Mode
        required:
        - enabled
        - max_fan
        - min_fan
        - target_temp
  WorkerOctofan:
    type: object
    properties:
      octofan:
        type: object
        description: Configuration for Octominer fan controller
        properties:
          fan:
            type: integer
            description: Manual fan speed, %
            minimum: 0
            maximum: 100
          auto:
            type: boolean
            description: Enable automatic fan speed manage
          target_temp:
            type: integer
            description: Target temperature for automatic mode, °C
          min_fan:
            type: integer
            description: Minimum fan speed for automatic mode, %
            minimum: 0
            maximum: 100
          max_fan:
            type: integer
            description: Maximum fan speed for automatic mode, %
            minimum: 0
            maximum: 100
          blink_on_errors:
            type: boolean
            description: Enable LED blink in case of rig errors
          blink_to_find:
            type: boolean
            description: Enable LED blink to find the rig
          fan1_max_rpm:
            type: integer
            description: Maximum RPM for 1 fan
          fan2_max_rpm:
            type: integer
            description: Maximum RPM for 2 fan
          fan3_max_rpm:
            type: integer
            description: Maximum RPM for 3 fan
          fan1_port:
            type: integer
            description: Port number for 1 fan
          fan2_port:
            type: integer
            description: Port number for 2 fan
          fan3_port:
            type: integer
            description: Port number for 3 fan
  WorkerOctofanStats:
    type: object
    properties:
      octofan_stats:
        type: object
        description: Octominer's fan controller stats
        properties:
          casefan:
            type: array
            example:
            - 50
            - 41
            - 60
            description: Case fan speeds, %
            items:
              type: integer
          thermosensors:
            type: array
            example:
            - 27
            - 37
            - 33
            - 41
            description: |
              Temperatures from sensors, °C
              Typically the temps are:
              * T0 - Rig intake air
              * T1 - Rig exhaust air
              * T2 - PSU intake air
              * T3 - PSU exhaust air
            items:
              type: integer
  WorkerCoolbox:
    type: object
    properties:
      coolbox:
        type: object
        description: Configuration for Coolbox fan controller
        properties:
          fan:
            type: integer
            description: Manual fan speed, %
            minimum: 0
            maximum: 100
          auto:
            type: boolean
            description: Enable automatic fan speed manage
          target_temp:
            type: integer
            description: Target temperature for autofan, °C
          wd_enabled:
            type: boolean
            description: Enable watchdog
          wd_interval:
            type: integer
            description: Reset worker after, minutes
            minimum: 0
  WorkerCoolboxInfo:
    type: object
    properties:
      coolbox_info:
        type: object
        description: Information about installed Coolbox fan controller
        properties:
          version:
            type: string
            description: |
              Controller version:
              - L - LITE: only manual fan speed control
              - P - PRO: autofan, watchdog
            enum:
            - L
            - P
          revision:
            type: string
            example: 001
            description: Revision number
  WorkerCoolboxStats:
    type: object
    properties:
      coolbox_stats:
        type: object
        description: Coolbox fan controller stats
        properties:
          casefan:
            type: array
            example:
            - 50
            - 41
            - 60
            description: Case fan speeds, %
            items:
              type: integer
          thermosensors:
            type: array
            example:
            - 27
            - 37
            - 33
            description: Temperatures from sensors, °C
            items:
              type: integer
  WorkerFanflap:
    type: object
    properties:
      fanflap:
        type: object
        description: Configuration for FanFlap controller
        properties:
          fan:
            type: integer
            description: Manual fan speed, %
            minimum: 0
            maximum: 100
          auto:
            type: boolean
            description: Enable automatic fan speed manage
          target_temp:
            type: integer
            description: Target temperature for automatic mode, °C
          min_fan:
            type: integer
            description: Minimum fan speed for automatic mode, %
            minimum: 0
            maximum: 100
          max_fan:
            type: integer
            description: Maximum fan speed for automatic mode, %
            minimum: 0
            maximum: 100
  WorkerFanflapStats:
    type: object
    properties:
      fanflap_stats:
        $ref: '#/definitions/FanflapStats'
  FanflapStats:
    type: object
    properties:
      fan:
        type: array
        example:
        - 50
        - 41
        - 60
        description: Fan speeds, %
        items:
          type: integer
    description: FanFlap controller stats
  WorkerPowermeter:
    type: object
    properties:
      powermeter:
        type: object
        description: Configuration for Powermeter controller
        properties:
          meters:
            type: array
            description: Energy meters configuration
            items:
              type: object
              properties:
                url:
                  type: string
                  format: url
                  description: API URL
                user:
                  type: string
                  format: url
                  description: Username
                pass:
                  type: string
                  format: url
                  description: Password
              required:
              - url
  WorkerPowermeterStats:
    type: object
    properties:
      powermeter_stats:
        $ref: '#/definitions/PowermeterStats'
  PowermeterStats:
    type: object
    properties:
      power:
        type: array
        example:
        - - 56.7
          - 56.8
          - 58.5
        - - 44.3
          - 44.6
          - 43.1
        description: Current power draw, kilowatts (kW)
        items:
          type: array
          items:
            type: integer
      power_total:
        type: array
        example:
        - 171.9
        - 132.0
        description: Current total power draw, kilowatts (kW)
        items:
          type: integer
      energy_total:
        type: array
        example:
        - 123456.7
        - 253235.6
        description: Power usage value, kilowatthours (kWh)
        items:
          type: number
    description: |
      Powermeter controller stats.
      Each value is an array containing values from corresponding meter.
  PowerDrawSettings:
    type: object
    properties:
      hardware_power_draw:
        type: integer
        example: 715
        description: Power consumption of worker's hardware, watts
      psu_efficiency:
        type: integer
        example: 85
        description: Efficiency of power supply unit, %
      octofan_correct_power:
        type: boolean
        description: Apply power correction settings to power consumption value from Octominer fan controller. Default is false.
  WorkerAsicConfig:
    type: object
    properties:
      asic_config:
        type: object
        description: Settings for ASICs with Hive firmware, depends on model and firmware version
        additionalProperties:
          type: string
  WorkerMetric:
    type: object
    properties:
      time:
        type: integer
        format: timestamp
        example: 1526342689
      units:
        type: integer
        example: 6
        description: GPUs or ASIC boards count
      temp:
        type: array
        example:
        - 71
        - 74
        - 69
        description: Temperature, °C
        items:
          type: integer
      fan:
        type: array
        example:
        - 56
        - 63
        - 50
        description: Fan speed
        items:
          type: integer
      power:
        type: number
        example: 1240.0
        description: Total power draw, watts
      hashrates:
        type: array
        description: Hashrates by algorithm
        items:
          type: object
          properties:
            algo:
              $ref: '#/definitions/AlgoName'
            values:
              type: array
              example:
              - 15219000
              - 26094000
              - 15225000
              description: Hashrate
              items:
                type: number
      fanflap:
        $ref: '#/definitions/FanflapStats'
      powermeter:
        $ref: '#/definitions/PowermeterStats'
  WorkerConfigFiles:
    type: object
    properties:
      rig.conf:
        type: string
        description: rig.conf file contents
  GpuInfo:
    type: object
    properties:
      bus_id:
        type: string
        example: 01:00.0
        description: GPU bus ID
      bus_number:
        type: integer
        example: 1
        description: GPU bus number
      brand:
        type: string
        example: nvidia
        description: 'Brand name: amd, nvidia, internal'
      model:
        type: string
        example: GeForce GTX 1050 Ti
        description: Model name
      short_name:
        type: string
        example: GTX 1050 Ti
        description: Model short name
      details:
        type: object
        properties:
          mem:
            type: string
            example: 4040 MiB
            description: Memory size
          mem_gb:
            type: integer
            example: 4
            description: Memory size converted to gigabytes
          mem_type:
            type: string
            example: SK Hynix H5GC4H24AJR
            description: Memory type
          mem_oem:
            type: string
            example: Hynix
            description: Memory OEM
          vbios:
            type: string
            example: 86.07.39.00.52
          subvendor:
            type: string
            example: PC Partner Limited / Sapphire Technology
          oem:
            type: string
            example: Sapphire
      power_limit:
        type: object
        properties:
          min:
            type: string
            example: 52.50 W
            description: Minimum value
          def:
            type: string
            example: 120.00 W
            description: Default value
          max:
            type: string
            example: 130.00 W
            description: Maximum value
      index:
        type: integer
        description: Index on rig
  GpuStats:
    type: object
    properties:
      temp:
        type: integer
        example: 50
        description: Temperature, °C
      fan:
        type: integer
        example: 37
        description: Fan speed, %
      power:
        type: integer
        example: 100
        description: Power draw, watts
      coreclk:
        type: integer
        example: 1582
        description: Core clock, MHz
      memclk:
        type: integer
        example: 4455
        description: Memory clock, MHz
      memtemp:
        type: integer
        example: 50
        description: Memory temperature, °C
    description: GPU stats
  Gpu:
    allOf:
    - type: object
      properties:
        worker:
          $ref: '#/definitions/WorkerShortInfo'
    - $ref: '#/definitions/GpuInfo'
    - type: object
      properties:
        stats:
          $ref: '#/definitions/GpuStats'
        flashing_state:
          $ref: '#/definitions/GpuFlashingState'
  GpuFlashingState:
    type: object
    properties:
      last_ok:
        type: object
        description: Last successfully flashed ROM
        allOf:
        - $ref: '#/definitions/GpuFlashedRom'
      last_failed:
        type: object
        description: Latest flashing if it failed
        allOf:
        - $ref: '#/definitions/GpuFlashedRom'
      in_process:
        type: object
        description: Flashing being executed right now
        allOf:
        - $ref: '#/definitions/GpuFlashedRom'
        - type: object
          properties:
            cmd_id:
              type: integer
              description: Command ID that is executing
    description: Contains information about currently running or recent flashing process.
  GpuFlashedRom:
    type: object
    properties:
      rom_id:
        type: integer
        description: Rom ID that was flashed
      rom_name:
        type: string
        description: Rom name
      time:
        type: integer
        format: timestamp
        description: When the ROM was flashed
  Platform:
    type: integer
    description: |
      Worker platform:
      * 1 - GPU
      * 2 - ASIC
    example: 1
    enum:
    - 1
    - 2
  FSFields:
    type: object
    properties:
      name:
        type: string
        description: Display name
        maxLength: 100
      is_favorite:
        type: boolean
        description: Is favorite flag
  FSItemFields:
    type: object
    required:
    - coin
    - miner
    - miner_config
    - wal_id
    properties:
      coin:
        type: string
        example: ETH
        description: Coin name
      pool:
        type: string
        example: nanopool
        description: Pool name
      pool_geo:
        type: array
        example:
        - EU
        description: Pool geo
        items:
          type: string
      pool_ssl:
        type: boolean
        description: Use SSL when connecting to pool
      pool_urls:
        type: array
        example:
        - eth-eu1.nanopool.org:9999
        - eth-eu2.nanopool.org:9999
        description: Pool urls
        items:
          type: string
      wal_id:
        type: integer
        description: Wallet ID
      email:
        type: string
        description: Email for pool
      dcoin:
        type: string
        example: DCR
        description: Second coin name for dual miner
      dpool:
        type: string
        example: nanopool
        description: Second pool name for dual miner
      dpool_geo:
        type: array
        example:
        - EU
        description: Second pool geo
        items:
          type: string
      dpool_ssl:
        type: boolean
        description: Use SSL when connecting to second pool
      dpool_urls:
        type: array
        example:
        - sia-eu1.nanopool.org:19999
        - sia-eu2.nanopool.org:19999
        description: Second pool urls
        items:
          type: string
      dwal_id:
        type: integer
        description: Second wallet ID for dual miner
      demail:
        type: string
        description: Second email for pool for dual miner
      miner:
        $ref: '#/definitions/MinerName'
      miner_config:
        $ref: '#/definitions/MinerConfig'
  FSItems:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/FSItemFields'
  FlightSheet:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/FSFields'
    - type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/definitions/FSItemFullInfo'
        workers_count:
          type: integer
          description: Amount of workers that use this flight sheet
  FlightSheetF:
    allOf:
    - $ref: '#/definitions/FlightSheet'
    - $ref: '#/definitions/FarmId'
    - $ref: '#/definitions/UserId'
  FlightSheetU:
    allOf:
    - $ref: '#/definitions/FlightSheet'
    - $ref: '#/definitions/UserId'
  FSCreateRequest:
    allOf:
    - $ref: '#/definitions/FSFields'
    - $ref: '#/definitions/FSItems'
  FSUpdateRequest:
    allOf:
    - $ref: '#/definitions/FSFields'
    - $ref: '#/definitions/FSItems'
  FSShortInfo:
    type: object
    properties:
      id:
        type: integer
      farm_id:
        type: integer
      user_id:
        type: integer
      name:
        type: string
        description: Display name
  FSMidInfo:
    type: object
    properties:
      id:
        type: integer
      farm_id:
        type: integer
      user_id:
        type: integer
      name:
        type: string
        description: Display name
      items:
        type: array
        items:
          $ref: '#/definitions/FSItemMidInfo'
  FSItemMidInfo:
    type: object
    properties:
      coin:
        type: string
        example: ETH
        description: Coin name
      pool:
        type: string
        example: nanopool
        description: Pool name
      wal_id:
        type: integer
        description: Wallet ID
      dcoin:
        type: string
        example: DCR
        description: Second coin name for dual miner
      dpool:
        type: string
        example: nanopool
        description: Second pool name for dual miner
      dwal_id:
        type: integer
        description: Second wallet ID
      miner:
        $ref: '#/definitions/MinerName'
      miner_alt:
        type: string
        description: Additional text for miner name. For example fork name or veersion.
  FSItemFullInfo:
    allOf:
    - $ref: '#/definitions/FSItemFields'
    - type: object
      properties:
        miner_alt:
          type: string
          description: Additional text for miner name. For example fork name or veersion.
  MinersConfig:
    type: array
    description: Miners configuration
    items:
      type: object
      properties:
        miner:
          $ref: '#/definitions/MinerName'
        config:
          $ref: '#/definitions/MinerConfig'
      required:
      - miner
  MinerConfig:
    type: object
    description: Miner configuration. See MinerConfig object for list of per-miner options
  MinerConfigExaple:
    type: object
    properties:
      claymore:
        type: object
        properties:
          epools_tpl:
            type: string
            description: epools.txt template
          dpools_tpl:
            type: string
            description: dpools.txt template
          dcoin:
            type: string
            description: Second coin
          dcri:
            type: integer
            description: Second coin mining intensity 0-100
            minimum: 0
            maximum: 100
          claymore_user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - epools_tpl
      claymore-z:
        type: object
        properties:
          zpools_tpl:
            type: string
            description: epools.txt template
          claymore-z_user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - zpools_tpl
      claymore-x:
        type: object
        properties:
          xpools_tpl:
            type: string
            description: epools.txt template
          claymore-x_user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - xpools_tpl
      ewbf:
        type: object
        properties:
          ztemplate:
            type: string
            description: Wallet and worker template
          zserver:
            type: string
            description: Pool server
          zport:
            type: string
            description: Pool port
          zpass:
            type: string
            description: Pool pass
          fork:
            type: string
            description: Miner Fork
          algo:
            type: string
            description: Miner Algo
          user_config:
            type: string
            description: Extra hiveclient.conf arguments
          ver:
            type: string
            description: Version
        required:
        - zserver
        - ztemplate
      ccminer:
        type: object
        properties:
          ccalgo:
            type: string
            description: Hash algorithm
          ccuser:
            type: string
            description: Wallet and worker template
          fork:
            type: string
            description: Miner Fork
          ccurl:
            type: string
            description: Pool URL
          ccpass:
            type: string
            description: Pool pass
          ccextra:
            type: string
            description: Extra arguments for miner
          ccpoolextra:
            type: string
            description: Extra params for pool
          ver:
            type: string
            description: Version
        required:
        - ccalgo
        - ccurl
        - ccuser
      ethminer:
        type: object
        properties:
          template:
            type: string
            description: Wallet and worker template
          opencl:
            type: boolean
            description: AMD (OpenCL)
          cuda:
            type: boolean
            description: Nvidia (CUDA)
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Extra arguments for miner
          ver:
            type: string
            description: Version
        required:
        - server
        - template
      sgminer:
        type: object
        properties:
          template:
            type: string
            description: Wallet and worker template
          algo:
            type: string
            description: Hash algorithm
          fork:
            type: string
            description: Miner Fork
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Extra hiveclient.conf arguments
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      dstm:
        type: object
        properties:
          template:
            type: string
            description: Wallet and worker template
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Extra hiveclient.conf arguments
          ver:
            type: string
            description: Version
        required:
        - server
        - template
      bminer:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          tls:
            type: boolean
            description: Use TLS
          algo2:
            type: string
            description: Secondary hash algorithm
          template2:
            type: string
            description: Secondary wallet and worker template
          url2:
            type: string
            description: Secondary pool URL
          pass2:
            type: string
            description: Secondary pool pass
          tls2:
            type: boolean
            description: Use TLS for secondary pool
          intensity:
            type: integer
            description: The intensity of the secondary mining
            minimum: 0
            maximum: 300
          user_config:
            type: string
            description: Extra hiveclient.conf arguments
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      lolminer:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Extra hiveclient.conf arguments
          ver:
            type: string
            description: Version
        required:
        - algo
        - server
        - template
      optiminer:
        type: object
        properties:
          template:
            type: string
            description: Wallet and worker template
          algo:
            type: string
            description: Hash algorithm
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Extra hiveclient.conf arguments
          ver:
            type: string
            description: Version
        required:
        - algo
        - server
        - template
      xmr-stak:
        type: object
        properties:
          fork:
            type: string
            description: Miner Fork
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          amd:
            type: string
            description: AMD hiveclient.conf override
          nvidia:
            type: string
            description: Nvidia hiveclient.conf override
          cpu:
            type: string
            description: CPU hiveclient.conf override
          hugepages:
            type: integer
            description: Amount of hugepages
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      xmrig:
        type: object
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          threads:
            type: string
            description: Threads configuration
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      xmrig-amd:
        type: object
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          threads:
            type: string
            description: Threads configuration
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      xmrig-nvidia:
        type: object
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          threads:
            type: string
            description: Threads configuration
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      cpuminer-opt:
        type: object
        properties:
          fork:
            type: string
            description: Miner Fork
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      custom:
        type: object
        properties:
          miner:
            type: string
            description: This is the name of installed miner. Like "mysuperminer".
          install_url:
            type: string
            description: |
              Installation URL
              URL where to get "tar.gz" package. It will not be downloaded if already installed.
          algo:
            $ref: '#/definitions/AlgoName'
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
        required:
        - miner
        - template
        - url
      asicminer:
        type: object
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          template2:
            type: string
            description: Wallet and worker template (fallback)
          url2:
            type: string
            description: Pool URL (fallback)
          pass2:
            type: string
            description: Pool pass (fallback)
          template3:
            type: string
            description: Wallet and worker template (fallback)
          url3:
            type: string
            description: Pool URL (fallback)
          pass3:
            type: string
            description: Pool pass (fallback)
          user_config:
            type: string
            description: Extra hiveclient.conf arguments
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      cryptodredge:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      phoenixminer:
        type: object
        properties:
          url:
            type: string
            description: Pool URL
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - url
      teamredminer:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          worker:
            type: string
            description: Worker name
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      cast-xmr:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      t-rex:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      wildrig-multi:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      finminer:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      gminer:
        type: object
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          pass:
            type: string
            description: Pool pass
          tls:
            type: boolean
            description: Enable TLS
          algo2:
            type: string
            description: Secondary hash algorithm
          template2:
            type: string
            description: Secondary wallet and worker template
          server2:
            type: string
            description: Secondary pool server
          port2:
            type: string
            description: Secondary pool port
          pass2:
            type: string
            description: Secondary pool pass
          tls2:
            type: boolean
            description: Secondary enable TLS
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - server
        - template
      beamcuda:
        type: object
        description: Beam CUDA Miner
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      beamcl:
        type: object
        description: Beam OpenCL Miner
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      grinminer:
        type: object
        description: Grin Miner
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      gringoldminer:
        type: object
        description: Grin Gold Miner
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          tls:
            type: boolean
            description: Enable TLS
          user_config:
            type: string
            description: Config override
          fork:
            type: string
            description: Miner fork
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      grinprominer:
        type: object
        description: GrinPro Miner
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          tls:
            type: boolean
            description: Enable TLS
          cpuload:
            type: integer
            description: CPU load
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      nbminer:
        type: object
        description: NBMiner
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          algo2:
            type: string
            description: Second hash algorithm
          template2:
            type: string
            description: Wallet and worker template for second algo
          url2:
            type: string
            description: Pool URL for second algo
          pass2:
            type: string
            description: Pool pass for second algo
          intensity:
            type: integer
            description: Intensity
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      hspminerae:
        type: object
        description: HSPMinerAE
        properties:
          template:
            type: string
            description: Wallet and worker template
          worker:
            type: string
            description: Worker name
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      zjazz-cuda:
        type: object
        description: zjazz CUDA miner
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      rhminer:
        type: object
        description: RandomHash miner
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      nanominer:
        type: object
        description: Nanominer
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          algo2:
            type: string
            description: Second hash algorithm
          template2:
            type: string
            description: Wallet and worker template for second algo
          url2:
            type: string
            description: Pool URL for second algo
          pass2:
            type: string
            description: Pool pass for second algo
          user_config2:
            type: string
            description: Config override for second algo
          common_config:
            type: string
            description: Common hiveclient.conf override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      kbminer:
        type: object
        description: KBMiner
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          tls:
            type: boolean
            description: Enable TLS
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      eggminergpu:
        type: object
        description: EggMinerGpu
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          tmpfs:
            type: boolean
            description: Use tmpfs to store mining file
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - worker
      noncepool-amd:
        type: object
        description: Noncepool AMD miner
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          tmpfs:
            type: boolean
            description: Use tmpfs to store mining file
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - worker
      noncepool-nvidia:
        type: object
        description: Noncepool Nvidia miner
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          tmpfs:
            type: boolean
            description: Use tmpfs to store mining file
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - worker
      miniz:
        type: object
        description: miniZ
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          tls:
            type: boolean
            description: Enable TLS
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      sushi-miner-opencl:
        type: object
        description: Sushi miner AMD
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - server
        - template
        - worker
      sushi-miner-cuda:
        type: object
        description: Sushi miner Nvidia
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - server
        - template
        - worker
      noncerpro-opencl:
        type: object
        description: NoncerPro OpenCL
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - server
        - template
        - worker
      noncerpro-cuda:
        type: object
        description: NoncerPro CUDA
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - server
        - template
        - worker
      noncerpro-kadena:
        type: object
        description: NoncerPro Kadena
        properties:
          template:
            type: string
            description: Wallet template
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          cuda:
            type: boolean
            description: Enable CUDA mining
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - server
        - template
      tt-miner:
        type: object
        description: TT-Miner
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      ckb-miner:
        type: object
        description: ckb-miner
        properties:
          url:
            type: string
            description: RPC URL
          opencl:
            type: boolean
            description: Use AMD (OpenCL)
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - url
      smine:
        type: object
        description: smine
        properties:
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      cortex-miner:
        type: object
        description: Cortex Miner
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          url:
            type: string
            description: Pool URL
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      xmrig-new:
        type: object
        description: XmRig (new)
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          cpu:
            type: boolean
            description: Enable CPU mining
          cpu_config:
            type: string
            description: Config for CPU mining
          opencl:
            type: boolean
            description: Enable OpenCL mining
          opencl_config:
            type: string
            description: Config for OpenCL mining
          cuda:
            type: boolean
            description: Enable CUDA mining
          cuda_config:
            type: string
            description: Config for CUDA mining
          tls:
            type: boolean
            description: Enable TLS
          hugepages:
            type: integer
            description: Amount of hugepages
          user_config:
            type: string
            description: Config override
          fork:
            type: string
            description: Miner fork
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      nq-miner:
        type: object
        description: Nimiq GPU miner
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          url:
            type: string
            description: Pool URL
          cuda:
            type: boolean
            description: Enable CUDA mining
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      nheqminer:
        type: object
        description: Equihash miner for NiceHash
        properties:
          template:
            type: string
            description: Wallet template
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          user_config:
            type: string
            description: Config override
          fork:
            type: string
            description: Miner fork
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      srbminer:
        type: object
        description: SRBMiner-MULTI
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          tls:
            type: boolean
            description: Enable TLS
          algo2:
            type: string
            description: Second hash algorithm
          template2:
            type: string
            description: Wallet template for second algo
          worker2:
            type: string
            description: Worker name for second algo
          url2:
            type: string
            description: Pool URL for second algo
          pass2:
            type: string
            description: Pool pass for second algo
          tls2:
            type: boolean
            description: Enable TLS for second algo
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      fah:
        type: object
        description: Folding@Home Client
        properties:
          team:
            type: string
            description: Team name
          user:
            type: string
            description: User name
          pass:
            type: string
            description: Pass key
          cpu:
            type: boolean
            description: Enable CPU mode
          cpu_config:
            type: string
            description: Config for CPU mode
          cuda:
            type: boolean
            description: Enable CUDA mode
          cuda_config:
            type: string
            description: Config for CUDA mode
          opencl:
            type: boolean
            description: Enable OpenCL mode
          opencl_config:
            type: string
            description: Config for OpenCL mode
          cpu_usage:
            type: integer
            description: CPU usage intensity
            minimum: 10
            maximum: 100
          gpu_usage:
            type: integer
            description: GPU usage intensity
            minimum: 10
            maximum: 100
          ver:
            type: string
            description: Version
      damominer:
        type: object
        description: DamoMiner
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet
          worker:
            type: string
            description: Worker name
          url:
            type: string
            description: Pool URL
          pass:
            type: string
            description: Pool pass
          algo2:
            type: string
            description: Second hash algorithm
          template2:
            type: string
            description: Wallet and worker template for second algo
          worker2:
            type: string
            description: Worker name for second algo
          url2:
            type: string
            description: Pool URL for second algo
          pass2:
            type: string
            description: Pool pass for second algo
          intensity:
            type: integer
            description: Intensity
          nicehash:
            type: boolean
            description: Nicehash mode
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - algo
        - template
        - url
      hellminer:
        type: object
        description: Hellminer
        properties:
          algo:
            type: string
            description: Hash algorithm
          template:
            type: string
            description: Wallet and worker template
          url:
            type: string
            description: Pool URL
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - template
        - url
      xpmclient:
        type: object
        description: XPM miner
        properties:
          template:
            type: string
            description: Wallet template
          worker:
            type: string
            description: Worker name
          server:
            type: string
            description: Pool server
          port:
            type: string
            description: Pool port
          user_config:
            type: string
            description: Config override
          ver:
            type: string
            description: Version
        required:
        - server
        - template
        - worker
    description: Per-miner configuration options
  WalletFields:
    type: object
    properties:
      name:
        type: string
        example: ETH wallet
        description: Display name
        maxLength: 100
      wal:
        type: string
        example: 0x123123123123123123
        description: ""
        maxLength: 255
      source:
        type: string
        description: |
          Wallet source. Can be either exchange name or any string.
          For supported exchanges see /hive/wallet_sources endpoint.
        maxLength: 100
      fetch_balance:
        type: boolean
        description: Try to retrieve wallet balance from blockchain or exchange
        default: false
      api_key_id:
        type: integer
        description: ID of attached API key for balance fetching (if required)
  Wallet:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/WalletCoin'
    - $ref: '#/definitions/WalletFields'
    - $ref: '#/definitions/WalletBalance'
    - $ref: '#/definitions/WalletPoolBalances'
    - type: object
      properties:
        fs_count:
          type: integer
          description: Amount of flight sheets that use this wallet
        workers_count:
          type: integer
          description: Amount of workers that use this wallet
  WalletF:
    allOf:
    - $ref: '#/definitions/Wallet'
    - $ref: '#/definitions/FarmId'
    - $ref: '#/definitions/UserId'
  WalletU:
    allOf:
    - $ref: '#/definitions/Wallet'
    - $ref: '#/definitions/UserId'
  WalletShortInfo:
    type: object
    properties:
      id:
        type: integer
      farm_id:
        type: integer
      user_id:
        type: integer
      name:
        type: string
        description: Display name
  WalletCoin:
    type: object
    properties:
      coin:
        type: string
        example: ETH
        description: Coin name
  WalletCreateRequest:
    allOf:
    - $ref: '#/definitions/WalletCoin'
    - $ref: '#/definitions/WalletFields'
  WalletUpdateRequest:
    allOf:
    - $ref: '#/definitions/WalletFields'
    - {}
  WalletBalance:
    type: object
    properties:
      balance:
        type: object
        description: |
          Wallet balance info.
          Either balance or status is present, not both.
          Pending status indicates that the balance is fetching at the moment and will be available soon.
          Other statuses indicate balance cannot be fetched.
          Balance info is cached by 30 minutes.
        properties:
          value:
            type: number
            description: Value in coins
          value_fiat:
            type: number
            description: Value in fiat currency
          status:
            type: string
            description: Status
            enum:
            - pending
            - not_found
            - invalid_address
            - coin_not_supported
            - exchange_not_supported
            - pool_not_supported
            - error_fetching
            - error_parsing
            - error
  WalletPoolBalances:
    type: object
    properties:
      pool_balances:
        type: array
        description: Balances from pools that this wallet uses
        items:
          type: object
          allOf:
          - type: object
            properties:
              pool:
                type: string
          - $ref: '#/definitions/WalletBalance'
  OCFields:
    type: object
    properties:
      name:
        type: string
        description: Display name
        maxLength: 100
      is_favorite:
        type: boolean
        description: Is favorite flag
      options:
        $ref: '#/definitions/OCConfig'
  OC:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/OCFields'
  OCF:
    allOf:
    - $ref: '#/definitions/OC'
    - $ref: '#/definitions/FarmId'
  OCU:
    allOf:
    - $ref: '#/definitions/OC'
    - $ref: '#/definitions/UserId'
  OCShortInfo:
    type: object
    properties:
      id:
        type: integer
      farm_id:
        type: integer
      name:
        type: string
        description: Display name
  OCCreateRequest:
    allOf:
    - $ref: '#/definitions/OCFields'
    - {}
  OCUpdateRequest:
    allOf:
    - $ref: '#/definitions/OCFields'
    - {}
  OCConfig:
    type: object
    properties:
      default:
        type: object
        description: |
          Default overclock.
          This overclock will be applied if there is no configuration for needed algo.
        allOf:
        - $ref: '#/definitions/OCProps'
      by_algo:
        type: array
        items:
          type: object
          allOf:
          - type: object
            properties:
              algo:
                $ref: '#/definitions/AlgoName'
          - $ref: '#/definitions/OCProps'
    description: Overclocking profile configuration
  OCProps:
    type: object
    properties:
      amd:
        $ref: '#/definitions/OCConfigAmd'
      nvidia:
        $ref: '#/definitions/OCConfigNvidia'
      asic:
        $ref: '#/definitions/OCConfigAsic'
  OCAlgo:
    type: string
    description: |
      Algorithm name. Overclock configuration for this algo will be applied.
      If not set - algo will be automatically resolved based on first applied flight sheet
    example: ethash
  OCConfigAmd:
    type: object
    properties:
      core_clock:
        type: string
        description: Core Clock (Mhz)
      core_state:
        type: string
        description: Core State (Index)
      core_vddc:
        type: string
        description: Core Voltage (mV)
      mem_clock:
        type: string
        description: Memory Clock (Mhz)
      mem_state:
        type: string
        description: Mem State (Index)
      mem_mvdd:
        type: string
        description: Memory voltage (mV)
      mem_vddci:
        type: string
        description: Memory bus voltage (mV)
      fan_speed:
        type: string
        description: Fan (%)
      power_limit:
        type: string
        description: Power Limit (W) (0 for stock value)
      aggressive:
        type: boolean
        description: Aggressive undervolting (set OC for each DPM state)
    description: Options for AMD cards
  OCConfigNvidia:
    type: object
    properties:
      core_clock:
        type: string
        description: +Core Clock (Mhz)
      mem_clock:
        type: string
        description: +Memory (Mhz)
      fan_speed:
        type: string
        description: Fan (%) (0 for auto)
      power_limit:
        type: string
        description: Power Limit (W) (0 for stock value)
      logo_off:
        type: boolean
        description: Turn Off LEDs (may not work on some cards)
      ohgodapill:
        type: boolean
        description: Enable OhGodAnETHlargementPill
      ohgodapill_start_timeout:
        type: integer
        description: Timeout to start OhGodAnETHlargementPill, seconds
      ohgodapill_args:
        type: string
        example: --revA 0,1,2
        description: Arguments for OhGodAnETHlargementPill
      running_delay:
        type: integer
        description: Delay before applying overclock, seconds
    description: Options for Nvidia cards
  OCConfigAsic:
    type: object
    description: Options for ASICs with Hive firmware, depends on model and firmware version
    additionalProperties:
      type: string
  TagFields:
    type: object
    properties:
      name:
        type: string
        description: Display name
        maxLength: 50
      color:
        type: integer
        description: Display color ID
  Tag:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/TagFields'
    - type: object
      properties:
        farms_count:
          type: integer
          description: Amount of farms that use this tag
        workers_count:
          type: integer
          description: Amount of workers that use this tag
  TagF:
    allOf:
    - $ref: '#/definitions/Tag'
    - type: object
      properties:
        is_auto:
          type: boolean
          description: Indicates that the tag is an "auto tag"
    - $ref: '#/definitions/FarmId'
    - $ref: '#/definitions/UserId'
  TagU:
    allOf:
    - $ref: '#/definitions/Tag'
    - $ref: '#/definitions/TagTypeId'
    - $ref: '#/definitions/UserId'
  TagCreateRequest:
    allOf:
    - $ref: '#/definitions/TagFields'
    - {}
  TagUpdateRequest:
    allOf:
    - $ref: '#/definitions/TagFields'
    - {}
  TagUCreateRequest:
    allOf:
    - $ref: '#/definitions/TagFields'
    - $ref: '#/definitions/TagTypeId'
  TagUUpdateRequest:
    allOf:
    - $ref: '#/definitions/TagFields'
    - $ref: '#/definitions/TagTypeId'
  TagTypeId:
    type: object
    properties:
      type_id:
        type: integer
        description: |
          Tag type
          * 1 - For workers
          * 2 - For farms
  TagIds:
    type: object
    properties:
      tag_ids:
        type: array
        example:
        - 47
        - 52
        items:
          type: integer
    description: Tag IDs
  TagIdsEdit:
    allOf:
    - $ref: '#/definitions/TagIds'
    - type: object
      properties:
        tag_update_mode:
          type: string
          description: |
            Update mode for tags
            * add - add spicified tags ignoring if already assigned;
            * remove - remove spicified tags if assigned;
            * replace - replace all assigned tags with specified ones;
          enum:
          - add
          - remove
          - replace
          default: replace
  AclFields:
    type: object
    properties:
      role:
        $ref: '#/definitions/AccessRoleEnum'
      tag_ids:
        type: array
        description: Tags list for restricted access
        items:
          type: integer
      twofa_required:
        type: boolean
        description: Require 2FA for write operations
  AclCreateRequest:
    allOf:
    - $ref: '#/definitions/AclFields'
    - {}
  AclUpdateRequest:
    allOf:
    - $ref: '#/definitions/AclFields'
    - {}
  FarmAcl:
    allOf:
    - type: object
      properties:
        id:
          type: integer
        user:
          $ref: '#/definitions/UserShortInfo'
    - $ref: '#/definitions/AclFields'
  MinerName:
    type: string
    description: Miner ID
    example: claymore
    enum:
    - claymore
    - claymore-z
    - claymore-x
    - ewbf
    - ccminer
    - ethminer
    - sgminer
    - dstm
    - bminer
    - lolminer
    - optiminer
    - xmr-stak
    - xmrig
    - cpuminer-opt
    - custom
    - asicminer
  CommandsEnum:
    type: string
    description: Command name
    example: reboot
    enum:
    - reboot
    - shutdown
    - upgrade
    - miner
    - teleconsole
    - hssh
    - exec
    - amd_download
    - amd_upload
    - nvidia_download
    - nvidia_upload
    - asic_upgrade
    - octofan_recalibrate
    - benchmark_stop
  CommandData:
    type: object
    description: |
      Data for command
      For `miner`:
      ```json
      {
        "action": "restart|stop|log|config|tuning",
        "miner_index": integer, Zero-based miner index, default is 0
      }
      ```
      For `teleconsole` and `hssh`:
      ```json
      {
        "action": "start|stop|restart"
      }
      ```
      For `exec`:
      ```json
      {
        "cmd": "command to execute"
      }
      ```
      For `amd_download` and `nvidia_download`:
      ```json
      {
        "gpu_index": integer, GPU index
        "to_storage": boolean, Save the ROM to farm's storage
      }
      ```
      For `amd_upload` and `nvidia_upload`:
      ```json
      {
        "gpu_index": integer, GPU index, zero-based (-1 to flash all GPUs)
        "rom": base64-string, ROM file contents
        "rom_id": integer, Use stored ROM instead of passing file contents
        "force": boolean, Force flashing regardless of security checkings
        "reboot": boolean, Reboot worker after successful flashing
      }
      ```
      For `upgrade`:
      ```json
      {
        "beta": boolean, Upgrade to latest beta version
        "version": string, Upgrade to this version
      }
      ```
      For `asic_upgrade`:
      ```json
      {
        "firmware_url": "firmware file url"
      }
      ```
  CommandRequest:
    type: object
    required:
    - command
    properties:
      command:
        $ref: '#/definitions/CommandsEnum'
      data:
        $ref: '#/definitions/CommandData'
  RomUploadRequestItem:
    type: object
    properties:
      gpus:
        type: array
        description: GPUs to flash. Different workers can be mixed here.
        items:
          type: object
          properties:
            worker_id:
              type: integer
              description: Worker ID
            gpu_index:
              type: string
              example: 0,1,2
              description: Comma-separated list of GPU indexes (zero-based)
      rom_id:
        type: integer
        description: Stored Rom ID to use
      force:
        type: boolean
        description: Force flashing regardless of security checkings
      reboot:
        type: boolean
        description: Reboot worker after successful flashing of all GPUs
  AccessRoleEnum:
    type: string
    description: Access role
    example: tech
    enum:
    - monitor
    - tech
    - rocket
    - advanced
    - full
  PoolTemplate:
    type: object
    properties:
      pool:
        type: string
        description: Pool name
      coin:
        $ref: '#/definitions/CoinSymbol'
      props:
        type: object
        properties:
          servers:
            type: array
            description: Pool servers
            items:
              type: object
              properties:
                geo:
                  type: string
                  description: Geo location of the server
                urls:
                  type: array
                  description: URLs to use for connection
                  items:
                    type: string
                ssl_urls:
                  type: array
                  description: SSL URLs to use for connection (if this server supports SSL)
                  items:
                    type: string
          miners:
            type: object
            example:
              claymore:
                epools_tpl: 'POOL: %URL%, WALLET: %WAL%.%WORKER_NAME%/%EMAIL%, PSW: x'
                claymore_user_config: -mode 1
              ethminer:
                cuda: 1
                pass: x
                port: '%URL_PORT%'
                server: '%URL_PROTO%1://%URL_HOST%'
                template: '%WAL%.%WORKER_NAME%/%EMAIL%'
            description: Miner hiveclient.conf templates keyed by miner name
            additionalProperties:
              type: object
              properties: {}
  AccountEvent:
    type: object
    properties:
      id:
        type: integer
        example: 12345
      timestamp:
        type: integer
        example: 1785325
      type_id:
        type: integer
        example: 2
      type:
        type: string
        example: Login
      ip:
        type: string
        example: 1.2.3.4
      hostname:
        type: string
        example: example.com
      by_admin:
        type: boolean
        description: Action was performed by Hive administrator
      details:
        type: object
        description: Details object is specific to event type
        properties: {}
  FarmEvent:
    type: object
    properties:
      id:
        type: integer
        example: 12345
      timestamp:
        type: integer
        example: 1785325
      type_id:
        type: integer
        example: 16
      type:
        type: string
        example: Access changed
      by_admin:
        type: boolean
        description: Action was performed by Hive administrator
      is_group:
        type: boolean
        description: Indicates that this is a group of events
      group_size:
        type: integer
        description: How many events the group contains
      details:
        type: object
        description: Details object is specific to event type
        properties: {}
      user:
        type: object
        description: User who performed the action
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      worker:
        type: object
        description: Related worker
        allOf:
        - $ref: '#/definitions/WorkerShortInfo'
  Pagination:
    type: object
    properties:
      total:
        type: integer
        description: Total count of entries available for current request
      count:
        type: integer
        description: Amount of returned entries
      per_page:
        type: integer
        description: Amount of entries per page
      current_page:
        type: integer
        description: Current page number
      total_pages:
        type: integer
        description: Amount of available pages
    description: Pagination data
  HiveVersion:
    type: object
    properties:
      system_type:
        type: string
        example: linux
        description: System type
        enum:
        - linux
        - asic
        - windows
      title:
        type: string
        description: Version title
      version:
        type: string
        example: 0.5-51
        description: Version number
      date:
        type: string
        format: date, yyyy-mm-dd
        example: 2018-05-15
        description: Release date
      image:
        type: boolean
        example: true
        description: Is neew image released
      description:
        type: string
        format: markdown
        description: Version description
    description: Hive OS version info
  AlgoName:
    type: string
    description: Algorithm name
    example: ethash
  DAlgoName:
    type: string
    description: Secondary algorithm name for dual miners
    example: blake2s
  MirrorUrl:
    type: string
    format: url
    example: http://api.hiveos.farm
  CoinSymbol:
    type: string
    description: Coin symbol
    example: ETH
  DCoinSymbol:
    type: string
    description: Secondary coin symbol for dual miners
    example: SC
  LoginRequest:
    type: object
    required:
    - login
    - password
    properties:
      login:
        type: string
        description: User login or email
      password:
        type: string
        description: User password
      twofa_code:
        $ref: '#/definitions/TwofaCode'
      remember:
        type: boolean
  SignupRequest:
    allOf:
    - $ref: '#/definitions/UserProfile'
    - type: object
      properties:
        password:
          $ref: '#/definitions/Password'
        promocode:
          type: string
          description: Referral promocode
        ref_id:
          type: integer
          description: Referral ID
  Password:
    type: string
    minLength: 6
    format: password
  TransactionTypeAccount:
    type: integer
    description: |
      Transaction type:
      * 1 - Deposit
      * 2 - Daily service usage
      * 3 - Referral Reward
      * 4 - Gift of fate
      * 5 - Referral Withdrawal
      * 6 - Sent to User
      * 7 - Received from User
      * 8 - Referral Exchange
      * 9 - Promo code
      * 10 - Sent to Farm
      * 12 - Deposit from referral balance
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 12
  TransactionAccount:
    type: object
    properties:
      id:
        type: integer
        description: Transaction ID
      timestamp:
        type: integer
        example: 1527679726
        description: Transaction timestamp
      type_id:
        $ref: '#/definitions/TransactionTypeAccount'
      amount:
        type: number
        example: 0.003
        description: Transaction amount
      currency:
        type: string
        example: BTC
        description: Transaction currency
      amount_fiat:
        type: number
        example: 0.003
        description: Transaction amount in fiat currency
      cost_details:
        type: array
        description: Cost details for type 2.
        items:
          $ref: '#/definitions/TransactionCostItem'
      referral_user:
        type: object
        description: Referral user for type 3
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      comment:
        type: string
        description: Comment for type 4
      txid:
        type: string
        description: |
          Coinpayments transaction ID for type 1,
          or blockchain transaction ID for type 5
      txurl:
        type: string
        description: Blockchain transaction explore URL for type 5
      target_user:
        type: object
        description: Target user for type 6
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      source_user:
        type: object
        description: Source user for type 7
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      target_farm:
        type: object
        description: Target farm for types 2, 10
        allOf:
        - $ref: '#/definitions/FarmShortInfo'
  TransactionTypeFarm:
    type: integer
    description: |
      Transaction type:
      * 2 - Daily service usage
      * 4 - Gift of fate
      * 7 - Received from User
      * 10 - Sent to Farm
      * 11 - Received from Farm
    enum:
    - 2
    - 4
    - 7
    - 10
    - 11
  TransactionFarm:
    type: object
    properties:
      id:
        type: integer
        description: Transaction ID
      timestamp:
        type: integer
        example: 1527679726
        description: Transaction timestamp
      type_id:
        $ref: '#/definitions/TransactionTypeFarm'
      amount:
        type: number
        example: 0.003
        description: Transaction amount in currency
      currency:
        type: string
        example: BTC
        description: Transaction currency
      cost_details:
        type: array
        description: Cost details for type 2.
        items:
          $ref: '#/definitions/TransactionCostItem'
      comment:
        type: string
        description: Comment for type 4
      user:
        type: object
        description: User who performed the opertation
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      source_user:
        type: object
        description: Source user for type 7
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      target_farm:
        type: object
        description: Target farm for type 10
        allOf:
        - $ref: '#/definitions/FarmShortInfo'
      source_farm:
        type: object
        description: Source farm for type 11
        allOf:
        - $ref: '#/definitions/FarmShortInfo'
  TransactionCostItem:
    type: object
    properties:
      type:
        $ref: '#/definitions/BillingType'
      amount:
        type: number
        example: 1.23
        description: Amount of used workers of this billing type
  Payment:
    type: object
    properties:
      id:
        type: integer
        description: Payment ID
      timestamp:
        type: integer
        description: Payment timestamp
      currency:
        type: string
        description: Payment currency
      amount:
        type: number
        description: Payment amount in currency
      amount_fiat:
        type: number
        description: Payment amount in fiat currency
      status:
        type: integer
        description: Payment status
      status_text:
        type: string
        description: Payment status text
      txid:
        type: string
        description: Transaction ID
  ReferralBalance:
    type: object
    properties:
      currency:
        $ref: '#/definitions/ReferralCurrency'
      amount:
        type: number
        example: 0.5
        description: Amount in currency
      amount_fiat:
        type: number
        example: 350.0
        description: Amount in fiat currency
      exchage_rate:
        type: number
        example: 700.0
        description: Conversion rate to fiat currency
  ReferralPayoutAddress:
    type: object
    required:
    - currency
    - payout_address
    properties:
      currency:
        $ref: '#/definitions/ReferralCurrency'
      payout_address:
        type: string
        example: 0x434343434343434343
  ReferralCurrency:
    type: string
    enum:
    - BTC
    - ETH
    - XRP
    - LTC
    - ZEC
    - ETC
    - BCH
    - XMR
    - USDT
  ReferralPayoutRequest:
    type: object
    required:
    - currency
    properties:
      currency:
        $ref: '#/definitions/ReferralCurrency'
      amount:
        type: number
        description: Amount in currency to withdraw
      all:
        type: boolean
        example: false
        description: If TRUE - the whole referral balance in this currency will be withdrawn and "amount" will be ignored
  AccountAccess:
    type: object
    properties:
      whitelist_ips:
        type: array
        description: |
          List of IP addresses that are allowed to login to your account
          Examples:
          * `172.217.16.46` single IP address is allowed
          * `172.217.16.0/24` will match any IP staring with 172.217.16.
          * `172.217.0.0/16` will match any IP staring with 172.217.
          * `0:0:0:0:0:ffff:b2a5:246` single IPV6 address
          * `2001:db8::/48` will match any IPV6 address staring with 2001:db8::
        items:
          type: string
          example: 1.1.1.1
  NotificationChannels:
    type: object
    properties:
      channels:
        type: array
        description: List of enabled notification channels
        items:
          $ref: '#/definitions/NotificationChannelEnum'
      channels_data:
        type: object
        properties:
          telegram:
            type: object
            properties:
              auth_code:
                type: string
                description: Entered authentication code. If present - Telegram subscription process is not finished.
              username:
                type: string
                description: Telegram account username that is connected
          discord:
            type: object
            properties:
              auth_code:
                type: string
                description: Entered authentication code. If present - Discord subscription process is not finished.
              username:
                type: string
                description: Discord account username that is connected
          wechat:
            type: object
            properties:
              auth_code:
                type: string
                description: Entered authentication code. If present - WeChat subscription process is not finished.
              username:
                type: string
                description: WeChat account username that is connected
  NotificationSubscriptionsAccount:
    type: object
    properties:
      subscriptions:
        type: object
        description: |
          Per-channel lists of event names to notify.
          - **telegram** - for Telegram;
          - **discord** - for Discord;
          - **wechat** - for WeChat;
        properties:
          telegram:
            $ref: '#/definitions/NotificationSubscriptionsItemAccount'
          discord:
            $ref: '#/definitions/NotificationSubscriptionsItemAccount'
          wechat:
            $ref: '#/definitions/NotificationSubscriptionsItemAccount'
  NotificationSubscriptionsItemAccount:
    type: array
    items:
      $ref: '#/definitions/NotificationAccountEventEnum'
    example:
    - login
  NotificationSubscriptionsFarm:
    type: object
    properties:
      subscriptions:
        type: object
        description: |
          Per-channel lists of event names to notify.
          - **telegram** - for Telegram;
          - **discord** - for Discord;
          - **wechat** - for WeChat;
        properties:
          telegram:
            $ref: '#/definitions/NotificationSubscriptionsItemFarm'
          discord:
            $ref: '#/definitions/NotificationSubscriptionsItemFarm'
          wechat:
            $ref: '#/definitions/NotificationSubscriptionsItemFarm'
  NotificationSubscriptionsItemFarm:
    type: array
    items:
      $ref: '#/definitions/NotificationFarmEventEnum'
    example:
    - online
    - offline
    - danger
    - red_temp
  NotificationAccountEventEnum:
    type: string
    description: |
      * `login` - Log in using password
    enum:
    - login
  NotificationFarmEventEnum:
    type: string
    description: |
      * `offline` - Worker went offline
      * `online` - Worker became online
      * `boot` - Worker booted
      * `danger` - Danger message from worker
      * `warning` - Warning message from worker
      * `info` - Info message from worker
      * `success` - Success message from worker
      * `red_temp` - Temperature >= red_temp + 3°C
      * `red_mem_temp` - GPU memory temperature >= red_mem_temp + 3°C
      * `red_cpu_temp` - CPU temperature >= red_cpu_temp + 3°C
      * `red_board_temp` - ASIC board temperature >= red_board_temp + 3°C
      * `red_fan` - Fan speed >= red_fan + 5%
      * `red_asr` - Accepted shares ratio <= red_asr - 5%. Notification is muted while total amount of shares < 10.
      * `red_la` - Load averege (15m) >= red_la + 1. Notification is muted for 20 minutes after boot.
      * `missed_unit` - Missed GPU/Board
      * `summary` - Hourly summary
    enum:
    - offline
    - online
    - boot
    - danger
    - warning
    - info
    - success
    - red_temp
    - red_mem_temp
    - red_cpu_temp
    - red_board_temp
    - red_fan
    - red_asr
    - red_la
    - missed_unit
    - summary
  TwofaCode:
    type: string
    minLength: 6
    maxLength: 6
    description: 2FA code from authenticating device
    example: 234345
  AuthTokenItem:
    type: object
    properties:
      id:
        type: integer
        description: Token ID
      name:
        type: string
        description: Display name
      personal:
        type: boolean
        description: Is manually created personal token
      active:
        type: boolean
        description: Is active (for personal tokens)
      current:
        type: boolean
        description: Is current session token
      created_at:
        type: integer
        format: timestamp
        example: 1526342689
        description: When token was created
      expires_at:
        type: integer
        format: timestamp
        example: 1526342689
        description: When token expires
      last_activity:
        type: integer
        format: timestamp
        example: 1526342689
        description: When token was last used (5 minute precision)
      ip:
        type: string
        format: ip
        example: 1.2.3.4
        description: IP address of the client who created the token
      hostname:
        type: string
        description: Resolved hostname
  AuthTokenItemFull:
    allOf:
    - $ref: '#/definitions/AuthTokenItem'
    - type: object
      properties:
        token:
          type: string
          description: Token value. Used for authentication.
  AuthTokenItemCreateUpdateRequest:
    type: object
    properties:
      name:
        type: string
        description: Display name
      active:
        type: boolean
        description: Is active
  ApiKeyFields:
    type: object
    properties:
      name:
        type: string
        description: Display name
      api_id:
        type: string
        description: API ID
      api_key:
        type: string
        description: API key
  ApiKeySource:
    type: object
    properties:
      source_type:
        type: string
        example: exchange
        enum:
        - pool
        - exchange
      source_name:
        type: string
        example: binance
        description: |
          Pool name or exchange name.
          For supported pools and exchanges see /hive/wallet_sources endpoint.
  ApiKeySecret:
    type: object
    properties:
      api_secret:
        type: string
        description: API secret
  ApiKey:
    allOf:
    - $ref: '#/definitions/ApiKeyFields'
    - $ref: '#/definitions/ApiKeySource'
    - type: object
      properties:
        created_at:
          type: integer
          format: timestamp
          example: 1526342689
  ApiKeyF:
    allOf:
    - $ref: '#/definitions/ApiKey'
    - $ref: '#/definitions/FarmId'
  ApiKeyU:
    allOf:
    - $ref: '#/definitions/ApiKey'
    - $ref: '#/definitions/UserId'
  ApiKeyCreateRequest:
    allOf:
    - $ref: '#/definitions/ApiKeyFields'
    - $ref: '#/definitions/ApiKeySecret'
    - $ref: '#/definitions/ApiKeySource'
  ApiKeyUpdateRequest:
    allOf:
    - $ref: '#/definitions/ApiKeyFields'
    - $ref: '#/definitions/ApiKeySecret'
  RomFields:
    type: object
    properties:
      file_name:
        type: string
        description: File name
      brand:
        type: string
        description: GPU brand
        enum:
        - amd
        - nvidia
      name:
        type: string
        description: Display name
      description:
        type: string
        description: Brief description
  RomContents:
    type: object
    properties:
      contents:
        type: string
        description: Binary ROM contents
  Rom:
    allOf:
    - $ref: '#/definitions/RomFields'
    - $ref: '#/definitions/CreatedAt'
  RomWithContents:
    allOf:
    - $ref: '#/definitions/RomFields'
    - $ref: '#/definitions/RomContents'
    - $ref: '#/definitions/CreatedAt'
  RomF:
    allOf:
    - $ref: '#/definitions/RomWithContents'
    - $ref: '#/definitions/FarmId'
  RomU:
    allOf:
    - $ref: '#/definitions/RomWithContents'
    - $ref: '#/definitions/UserId'
  RomListItemF:
    allOf:
    - $ref: '#/definitions/Rom'
    - $ref: '#/definitions/FarmId'
  RomListItemU:
    allOf:
    - $ref: '#/definitions/Rom'
    - $ref: '#/definitions/UserId'
  RomCreateUpdateRequest:
    allOf:
    - $ref: '#/definitions/RomFields'
    - $ref: '#/definitions/RomContents'
  ScheduleFields:
    type: object
    properties:
      name:
        type: string
        description: Display name
      launch_at:
        type: integer
        format: timestamp
        example: 1526342689
        description: |
          When to apply the flight sheet.
          If rrule is specified - this field defines when the first occurrence will happen.
      rrule:
        type: string
        format: RRULE
        example: FREQ=DAILY;INTERVAL=1;COUNT=3
        description: |
          How to repeat the task.
          This field accepts RRULE definition from RFC 5545.
      timezone:
        type: string
        format: timezone
        example: UTC
        description: Time zone for RRule. By default farm's or user's time zone is used.
      active:
        type: boolean
        description: Is active
  Schedule:
    allOf:
    - $ref: '#/definitions/ScheduleFields'
    - $ref: '#/definitions/CreatedAt'
    - type: object
      properties:
        prev_launch_at:
          type: integer
          format: timestamp
          example: 1526342689
          description: When the task was last executed
        next_launch_at:
          type: integer
          format: timestamp
          example: 1526342689
          description: When the task is scheduled for execution
  ScheduleF:
    allOf:
    - $ref: '#/definitions/FarmId'
    - $ref: '#/definitions/Schedule'
    - $ref: '#/definitions/ScheduleActionF'
    - $ref: '#/definitions/ScheduleTargetF'
  ScheduleU:
    allOf:
    - $ref: '#/definitions/UserId'
    - $ref: '#/definitions/Schedule'
    - $ref: '#/definitions/ScheduleActionU'
    - $ref: '#/definitions/ScheduleTargetU'
  ScheduleListItemF:
    allOf:
    - $ref: '#/definitions/FarmId'
    - $ref: '#/definitions/Schedule'
  ScheduleListItemU:
    allOf:
    - $ref: '#/definitions/UserId'
    - $ref: '#/definitions/Schedule'
  ScheduleCreateUpdateRequestF:
    allOf:
    - $ref: '#/definitions/ScheduleFields'
    - $ref: '#/definitions/ScheduleActionF'
    - $ref: '#/definitions/ScheduleTargetF'
  ScheduleCreateUpdateRequestU:
    allOf:
    - $ref: '#/definitions/ScheduleFields'
    - $ref: '#/definitions/ScheduleActionU'
    - $ref: '#/definitions/ScheduleTargetU'
  ScheduleActionData:
    allOf:
    - $ref: '#/definitions/WorkerEditFS'
    - $ref: '#/definitions/WorkerEditOCId'
    - type: object
      properties:
        command:
          $ref: '#/definitions/CommandsEnum'
        command_data:
          $ref: '#/definitions/CommandData'
    - type: object
      properties:
        asic_oc:
          type: object
          properties:
            model_code:
              type: string
              example: s9.100
              description: Hiveon ASIC's model code for which the hiveclient.conf will be applied
            config:
              $ref: '#/definitions/OCConfigAsic'
  ScheduleActionF:
    type: object
    properties:
      action:
        type: object
        description: Everything defined in this object will be applied to workers
        allOf:
        - $ref: '#/definitions/ScheduleActionData'
  ScheduleActionU:
    type: object
    properties:
      action:
        type: object
        description: Everything defined in this object will be applied to workers
        allOf:
        - $ref: '#/definitions/ScheduleActionData'
  ScheduleTargetF:
    type: object
    properties:
      target:
        type: object
        properties:
          tag_ids:
            type: array
            description: Tags list. Action will be applied to workers with these tags.
            items:
              type: integer
  ScheduleTargetU:
    type: object
    properties:
      target:
        type: object
        properties:
          tag_ids:
            type: array
            description: Tags list. Action will be applied to workers with these tags.
            items:
              type: integer
  FarmTransfer:
    type: object
    properties:
      user:
        type: object
        description: Who initiated the request
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      target_user:
        type: object
        description: Who will be new farm's owner
        allOf:
        - $ref: '#/definitions/UserShortInfo'
      type:
        $ref: '#/definitions/FarmTransferType'
      created_at:
        type: integer
        format: timestamp
        description: When the request was created
      expires_at:
        type: integer
        format: timestamp
        description: When the request will expire
  FarmTransferType:
    type: string
    description: |
      Transfer type
      * `owner` - target user will become farm's owner
      * `payer` - target user will become farm's payer
    enum:
    - owner
    - payer
  WorkerIds:
    type: object
    properties:
      worker_ids:
        type: array
        items:
          type: integer
  WorkerTransferRequest:
    type: object
    required:
    - target_farm_id
    properties:
      target_farm_id:
        type: integer
        description: Farm ID where to transfer the worker
  Deposit:
    type: object
    properties:
      amount:
        type: number
        description: Deposit amount
        minimum: 0.01
      source:
        type: string
        description: Deposit source
        enum:
        - account
        - farm
        default: account
      source_farm_id:
        type: integer
        description: Farm ID if selected source is "farm"
  IDs:
    type: object
    properties:
      ids:
        type: array
        items:
          type: integer
  FarmId:
    type: object
    properties:
      farm_id:
        type: integer
  UserId:
    type: object
    properties:
      user_id:
        type: integer
  CreatedAt:
    type: object
    properties:
      created_at:
        type: integer
        format: timestamp
        example: 1526342689
        description: When entity was created
  DepositAddress:
    type: object
    properties:
      provider:
        $ref: '#/definitions/DepositAddressProvider'
      currency:
        $ref: '#/definitions/DepositAddressCurrency'
      address:
        type: string
        example: 0x1234567890abcdef
        description: Deposit address
      created_at:
        type: integer
        format: timestamp
        example: 1526342689
        description: When the address was generated
  DepositAddressCreateRequest:
    type: object
    required:
    - currency
    - provider
    properties:
      provider:
        $ref: '#/definitions/DepositAddressProvider'
      currency:
        $ref: '#/definitions/DepositAddressCurrency'
  DepositAddressProvider:
    type: string
    description: |
      Provider name.
      Available providers can be get from `/hive/deposit_address_providers` endpoint
    example: hive
  DepositAddressCurrency:
    type: string
    description: |
      Currency.
      Available currencies can be get from `/hive/deposit_address_providers` endpoint
    example: ETH
  HiveStatItem:
    type: object
    properties:
      name:
        type: string
        description: Item name
      amount:
        type: number
        description: Percentage amount
  NotificationChannelEnum:
    type: string
    description: Notification channel
    enum:
    - telegram
    - discord
    - wechat
  HiveCurrencyItem:
    type: object
    properties:
      currency:
        type: string
        example: BTC
        description: Symbol
      name:
        type: string
        example: Bitcoin
        description: Display name
      rate:
        type: number
        example: 5197.739
        description: Exchange rate to fiat currency
    description: Currency info
  BenchmarkJob:
    type: object
    properties:
      algo:
        $ref: '#/definitions/AlgoName'
      rank:
        type: integer
        description: Popularity of this algo. Lower is better.
      recommended:
        type: boolean
        description: This algo is mined by another Hive users with the same GPUs.
    description: Benchmark job
  BenchmarkRequest:
    type: object
    required:
    - algos
    properties:
      worker_id:
        type: integer
        description: Worker ID for individual run.
      tag_ids:
        type: array
        description: Tags for batch run. Comma-separated list of Tag IDs.
        items:
          type: integer
      algos:
        type: array
        description: Algo names to include in benchmark
        items:
          $ref: '#/definitions/AlgoName'
  Benchmark:
    type: object
    properties:
      id:
        type: integer
      farm_id:
        type: integer
      worker_id:
        type: integer
      tag_ids:
        type: array
        items:
          type: integer
      started_at:
        type: integer
        format: timestamp
        description: When the benchmark was started
      finished_at:
        type: integer
        format: timestamp
        description: When the benchmark was finished. If absent - the benchmark is still running.
      aborted:
        type: boolean
        description: This flag indicates that the benchmark was aborted.
      algos:
        type: array
        description: Algorithms that were chosen for benchmark
        items:
          $ref: '#/definitions/AlgoName'
  BenchmarkWithResults:
    allOf:
    - $ref: '#/definitions/Benchmark'
    - $ref: '#/definitions/BenchmarkResults'
  BenchmarkResults:
    type: object
    properties:
      results:
        type: array
        description: Contains benchmark results. May contain partial results (not for all algos) if not finished yet.
        items:
          $ref: '#/definitions/BenchmarkResultItem'
  BenchmarkResultItem:
    type: object
    properties:
      algo:
        $ref: '#/definitions/AlgoName'
      miner:
        $ref: '#/definitions/MinerName'
      hashrate:
        type: number
        example: 123456.0
        description: Average hashrate, kH/s
      power:
        type: number
        example: 1234.0
        description: Average power draw, watts
  ContainerFields:
    type: object
    properties:
      name:
        type: string
        description: Container name
      description:
        type: string
      rows:
        type: integer
        description: Amount of rows in the container
        minimum: 1
      cols:
        type: integer
        description: Amount of rows in the container
        minimum: 1
  ContainerCellsConfigField:
    type: object
    properties:
      cells_config:
        type: array
        description: Cells configuration
        items:
          type: object
          properties:
            position:
              $ref: '#/definitions/ContainerCellPosition'
            config:
              $ref: '#/definitions/ContainerCellConfig'
  ContainerCellConfig:
    type: object
    properties:
      rules:
        type: object
        properties:
          worker_id:
            type: integer
            example: 123456
            description: Worker ID
          worker_name:
            type: string
            description: Worker name
          ip:
            type: string
            example: 192.168.1.100
            description: IP address
    description: Configuration for container cell
  Container:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/ContainerFields'
    - $ref: '#/definitions/ContainerCellsConfigField'
    - $ref: '#/definitions/ContainerCellsField'
    - $ref: '#/definitions/ContainerStatsField'
  ContainerListItem:
    allOf:
    - type: object
      properties:
        id:
          type: integer
    - $ref: '#/definitions/ContainerFields'
    - $ref: '#/definitions/ContainerStatsField'
  ContainerCellsField:
    type: object
    properties:
      cells:
        type: array
        items:
          $ref: '#/definitions/ContainerCell'
  ContainerStatsField:
    type: object
    properties:
      stats:
        $ref: '#/definitions/ContainerStats'
  ContainerCell:
    type: object
    properties:
      position:
        $ref: '#/definitions/ContainerCellPosition'
      worker:
        $ref: '#/definitions/WorkerListItem'
  ContainerCellPosition:
    minLength: 2
    maxLength: 2
    type: array
    description: '[x, y]'
    items:
      type: integer
    example:
    - 0
    - 0
  ContainerCreateRequest:
    allOf:
    - $ref: '#/definitions/ContainerFields'
    - $ref: '#/definitions/ContainerCellsConfigField'
  ContainerUpdateRequest:
    allOf:
    - $ref: '#/definitions/ContainerFields'
    - $ref: '#/definitions/ContainerCellsConfigField'
  ContainerStats:
    $ref: '#/definitions/FarmStats'
  BillingType:
    type: integer
    description: |
      Billing type:
      * 11 - Rigs general
      * 12 - Rigs that mine on hiveon pool
      * 13 - Rigs that mine hiveon coins on other pools
      * 21 - ASICs general
      * 22 - ASICs with Hive firmware
    enum:
    - 11
    - 12
    - 13
    - 21
    - 22
parameters:
  farmIdParam:
    name: farmId
    in: path
    required: true
    type: integer
  workerIdParam:
    name: workerId
    in: path
    required: true
    type: integer
  fsIdParam:
    name: fsId
    in: path
    required: true
    type: integer
  walletIdParam:
    name: walletId
    in: path
    required: true
    type: integer
  ocIdParam:
    name: ocId
    in: path
    required: true
    type: integer
  tagIdParam:
    name: tagId
    in: path
    required: true
    type: integer
  aclIdParam:
    name: aclId
    in: path
    required: true
    type: integer
  messageIdParam:
    name: messageId
    in: path
    required: true
    type: integer
  pageNumber:
    name: page
    in: query
    description: Page number
    required: false
    type: integer
    default: 1
  perPageCount:
    name: per_page
    in: query
    description: Per-page count (default is 15)
    required: false
    type: integer
  typeId:
    name: type_id
    in: query
    description: Return only records of these types, comma-separated list of IDs
    required: false
    type: string
  typeIdExclude:
    name: exclude_type_id
    in: query
    description: Exclude records of these types, comma-separated list of IDs
    required: false
    type: string
  workerId:
    name: worker_id
    in: query
    description: Return only records for these workers, comma-separated list of IDs
    required: false
    type: string
  workerIds:
    name: worker_ids
    in: query
    description: Return only records for these workers, comma-separated list of IDs
    required: false
    type: string
  messageIds:
    name: message_ids
    in: query
    description: Return only these messages, comma-separated list of IDs
    required: false
    type: string
  withPayload:
    name: with_payload
    in: query
    description: Include message payload to ouput
    required: false
    type: integer
    default: 0
    enum:
    - 0
    - 1
  schedulesPerformed:
    name: performed
    in: query
    description: Get only performed schedules
    required: false
    type: boolean
    enum:
    - 0
    - 1
  schedulesPlanned:
    name: planned
    in: query
    description: Get only planned schedules
    required: false
    type: boolean
    enum:
    - 0
    - 1
  schedulesAction:
    name: action
    in: query
    description: Get schedules with next actions. Supported multiple comma-separated actions
    required: false
    type: string
    enum:
    - command
    - flight_sheet
    - overclock
    - asic_overclock
  schedulesCommand:
    name: command
    in: query
    description: Get schedules with next commands. Supported multiple comma-separated values
    required: false
    type: string
  tagIds:
    name: tag_ids
    in: query
    description: Return only records for these tags, comma-separated list of IDs
    required: false
    type: string
  startTime:
    name: start_time
    in: query
    description: Return only messages starting from given timestamp
    required: false
    type: integer
    format: timestamp
  metricsDate:
    name: date
    in: query
    description: Start date
    required: false
    type: string
    default: today
    format: date, yyyy-mm-dd
  metricsPeriod:
    name: period
    in: query
    description: Period (1 day, 1 week, 1 month)
    required: false
    type: string
    default: 1d
    enum:
    - 1d
    - 1w
    - 1m
  metricsFillGaps:
    name: fill_gaps
    in: query
    description: Fill gaps with empty points
    required: false
    type: integer
    default: 0
    enum:
    - 0
    - 1
  tokenIdParam:
    name: tokenId
    in: path
    required: true
    type: integer
  keyIdParam:
    name: keyId
    in: path
    required: true
    type: integer
  romIdParam:
    name: romId
    in: path
    required: true
    type: integer
  scheduleIdParam:
    name: scheduleId
    in: path
    required: true
    type: integer
  channelParam:
    name: channel
    in: path
    description: |
      Channel name.
      Available channels can be get from `/hive/notification_channels` endpoint
    required: true
    type: string
  currencyParam:
    name: currency
    in: path
    required: true
    type: string
  platform:
    name: platform
    in: query
    description: |
      Worker platform:
      * 1 - GPU
      * 2 - ASIC
    required: false
    type: integer
    enum:
    - 1
    - 2
  workersFilter:
    name: filter
    in: query
    description: Optional filter for workers
    required: false
    type: string
    enum:
    - problem
    - problem24
    - online
    - offline
  tagsFilter:
    name: tags
    in: query
    description: Filter by tags. Comma-separated list of Tag IDs.
    required: false
    type: string
  metaNamespaceParam:
    name: namespace
    in: path
    required: true
    type: string
  benchmarkIdParam:
    name: benchmarkId
    in: path
    required: true
    type: integer
  containerIdParam:
    name: containerId
    in: path
    required: true
    type: integer
  configType:
    name: config_type
    in: query
    description: Comma-separated list of hiveclient.conf types
    required: false
    type: string
    enum:
    - fs_conf
    - worker_conf
    - autofan_conf
    - coolbox_conf
    - octofan_conf
    - amd_conf
    - nvidia_conf
  searchString:
    name: search
    in: query
    description: String with searched value
    required: false
    type: string
  userFilter:
    name: user
    in: query
    description: Filter by user. Both login and name are used for searching. This filter is searching by "contains", not "equals".
    required: false
    type: string
responses:
  CreatedResponse:
    description: Entity created
    schema:
      type: object
      properties:
        id:
          type: integer
  UpdatedResponse:
    description: Entity updated
  DeletedResponse:
    description: Entity deleted
  MustBeGuest:
    description: Not allowed for authenticated users
  ValidationError:
    description: Validation errors
    schema:
      type: object
      properties:
        message:
          type: string
          example: The given data was invalid.
        errors:
          type: object
          example:
            field1:
            - The field1 is required
            field2:
            - The field2 must be a string
            - The field2 must be 6 characters length
          description: Errors by field
          additionalProperties:
            type: array
            items:
              type: string
  AuthTokenResponse:
    description: Authentication token
    schema:
      $ref: '#/definitions/AuthToken'
  SignupResponse:
    description: Account created
    schema:
      allOf:
      - type: object
        properties:
          user_id:
            type: integer
            description: Created user ID
      - $ref: '#/definitions/AuthToken'
  CommandResponse:
    description: Command sent
    schema:
      allOf:
      - type: object
        properties:
          id:
            type: integer
            description: Command ID
      - $ref: '#/definitions/WorkerCommands'
  CommandsResponse:
    description: Command sent
    schema:
      type: object
      properties:
        id:
          type: integer
          description: Command ID
        commands:
          type: array
          description: Per-worker commands list
          items:
            type: object
            allOf:
            - type: object
              properties:
                worker_id:
                  type: integer
              required:
              - worker_id
            - $ref: '#/definitions/WorkerCommands'
